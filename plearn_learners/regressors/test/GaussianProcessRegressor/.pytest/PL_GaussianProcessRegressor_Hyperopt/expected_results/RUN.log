Type !? to get some help.
!R 0 
!R 0 
!R 0 
!R 1 GaussianProcessRegressor(
kernel = *1 ->SummationKernel(
terms = 2 [ *2 ->RationalQuadraticARDKernel(
isp_alpha = 0.41984749161951862 ;
isp_signal_sigma = 4.41014650900261618 ;
isp_global_sigma = 0 ;
isp_input_sigma = 1 [ -0.0767962823590773863 ] ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
*3 ->IIDNoiseKernel(
isp_noise_sigma = 4.4261143527445288 ;
isp_kronecker_sigma = -100 ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
] ;
input_indexes = []
;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 0 ;
data_inputsize = 1 ;
n_examples = 5  )
;
weight_decay = 0 ;
include_bias = 1 ;
compute_confidence = 1 ;
confidence_epsilon = 1.00000000000000002e-08 ;
hyperparameters = 3 [ ("terms[0].isp_signal_sigma" , "0.0" )("terms[0].isp_alpha" , "0.0" )("terms[1].isp_noise_sigma" , "0.0" )] ;
ARD_hyperprefix_initval = ("terms[0].isp_input_sigma" , "0.0" );
optimizer = *4 ->ConjGradientOptimizer(
verbosity = 1 ;
expected_red = 1 ;
no_negative_gamma = 1 ;
sigma = 0.100000000000000006 ;
rho = 0.0500000000000000028 ;
constrain_limit = 0.100000000000000006 ;
max_extrapolate = 3 ;
max_eval_per_line_search = 20 ;
slope_ratio = 10 ;
minibatch_n_samples = 0 ;
minibatch_n_line_searches = 3 ;
nstages = 1 ;
early_stop = 0  )
;
save_gram_matrix = 0 ;
solution_algorithm = "exact" ;
active_set_indices = []
;
alpha = 5  1  [ 
-0.0749902168570145272 	
0.0727389070777302998 	
0.0973384096207741134 	
0.566601377408640694 	
-0.795210046404519977 	
]
;
gram_inverse = 5  5  [ 
0.139498134040858895 	-0.0185812496595273054 	-0.0506909486307591528 	-0.00148370690353891643 	-0.000242930850138073416 	
-0.0185812496595273123 	0.139598477491035239 	-0.0506561235142563709 	-0.00367467439584157497 	-0.00030998929716561616 	
-0.0506909486307591528 	-0.0506561235142563779 	0.1554586053803238 	-0.00178948797787016373 	-0.000211909663436789616 	
-0.00148370690353891643 	-0.0036746743958415754 	-0.00178948797787016394 	0.113134907432459256 	-0.000913000374293741692 	
-0.000242930850138073416 	-0.00030998929716561616 	-0.000211909663436789616 	-0.000913000374293741692 	0.112874735081778407 	
]
;
subgram_inverse = 0  0  [ 
]
;
target_mean = 1 [ 10 ] ;
training_inputs = 5  1  [ 
5 	
6 	
5.5 	
10 	
20 	
]
;
expdir = "" ;
random_gen = *0 ;
seed = 1827 ;
stage = 1 ;
n_examples = 5 ;
inputsize = 1 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827 ;
finalized = 0  )

!R 1 1 [ 12.4854206721884182 ] 
!R 1 1 [ 10.5807841904971429 ] 
!R 2 4  1  [ 
10.7256846235799053 	
11.4500202213341549 	
12.4854206721884182 	
10.5807841904971429 	
]
1 [ 4  4  [ 
8.55743635585828066 	2.13398416871230845 	0.546730129377252516 	0.210257960655207327 	
2.13398416871230845 	8.09984178215855621 	1.25644119210545746 	0.277244774945088146 	
0.546730129377252516 	1.25644119210545724 	6.64771676644526366 	0.570559458080892479 	
0.210257960655207327 	0.277244774945088091 	0.570559458080892479 	8.70744953606769378 	
]
] 
!R 0 
!R 0 
!R 0 
!R 1 GaussianProcessRegressor(
kernel = *1 ->SummationKernel(
terms = 2 [ *2 ->RationalQuadraticARDKernel(
isp_alpha = 0.41984749161951862 ;
isp_signal_sigma = 4.41014650900261618 ;
isp_global_sigma = 0 ;
isp_input_sigma = 1 [ -0.0767962823590773863 ] ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
*3 ->IIDNoiseKernel(
isp_noise_sigma = 4.4261143527445288 ;
isp_kronecker_sigma = -100 ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
] ;
input_indexes = []
;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 0 ;
data_inputsize = 1 ;
n_examples = 5  )
;
weight_decay = 0 ;
include_bias = 1 ;
compute_confidence = 1 ;
confidence_epsilon = 1.00000000000000002e-08 ;
hyperparameters = 3 [ ("terms[0].isp_signal_sigma" , "0.0" )("terms[0].isp_alpha" , "0.0" )("terms[1].isp_noise_sigma" , "0.0" )] ;
ARD_hyperprefix_initval = ("terms[0].isp_input_sigma" , "0.0" );
optimizer = *4 ->ConjGradientOptimizer(
verbosity = 1 ;
expected_red = 1 ;
no_negative_gamma = 1 ;
sigma = 0.100000000000000006 ;
rho = 0.0500000000000000028 ;
constrain_limit = 0.100000000000000006 ;
max_extrapolate = 3 ;
max_eval_per_line_search = 20 ;
slope_ratio = 10 ;
minibatch_n_samples = 0 ;
minibatch_n_line_searches = 3 ;
nstages = 1 ;
early_stop = 0  )
;
save_gram_matrix = 0 ;
solution_algorithm = "projected-process" ;
active_set_indices = 5 [ 0 1 2 3 4 ] ;
alpha = 5  1  [ 
-0.0749902168570144578 	
0.0727389070777302721 	
0.0973384096207740579 	
0.566601377408640805 	
-0.795210046404519866 	
]
;
gram_inverse = 5  5  [ 
0.835401008104275089 	0.464220454909828939 	-1.14290699683802321 	-0.0099349932796523148 	-0.00123641448702753779 	
0.464220454909828772 	0.837752895668678055 	-1.14396362373329352 	-0.0225414924388310269 	-0.00150403229671235454 	
-1.14290699683802299 	-1.14396362373329352 	2.07761325988048373 	0.0174813840793698119 	0.00132346191527563713 	
-0.00993499327965231133 	-0.0225414924388310269 	0.0174813840793698119 	0.114874942912193342 	-0.00270028943686582371 	
-0.00123641448702753779 	-0.00150403229671235454 	0.00132346191527563735 	-0.00270028943686582371 	0.113334727004050437 	
]
;
subgram_inverse = 5  5  [ 
0.974899142145137176 	0.445639205250304649 	-1.19359794546878795 	-0.0114187001831912976 	-0.00147934533716562004 	
0.44563920525030476 	0.977351373159716097 	-1.19461974724755526 	-0.0262161668346726703 	-0.00181402159387797856 	
-1.19359794546878795 	-1.19461974724755504 	2.23307186526081747 	0.0156918961014997707 	0.00111155225183886207 	
-0.0114187001831912993 	-0.0262161668346726703 	0.0156918961014997707 	0.228009850344652598 	-0.0036132898111595653 	
-0.00147934533716562004 	-0.00181402159387797834 	0.00111155225183886229 	-0.0036132898111595653 	0.226209462085828844 	
]
;
target_mean = 1 [ 10 ] ;
training_inputs = 5  1  [ 
5 	
6 	
5.5 	
10 	
20 	
]
;
expdir = "" ;
random_gen = *0 ;
seed = 1827 ;
stage = 1 ;
n_examples = 5 ;
inputsize = 1 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827 ;
finalized = 0  )

!R 1 1 [ 12.4854206721884182 ] 
!R 1 1 [ 10.5807841904971429 ] 
!R 2 4  1  [ 
10.7256846235799053 	
11.4500202213341549 	
12.4854206721884182 	
10.5807841904971429 	
]
1 [ 4  4  [ 
8.55743635585828066 	2.133984168712308 	0.546730129377252294 	0.210257960655207271 	
2.133984168712308 	8.09984178215855621 	1.25644119210545702 	0.277244774945088091 	
0.546730129377252405 	1.25644119210545746 	6.64771676644526277 	0.570559458080892479 	
0.210257960655207271 	0.277244774945088146 	0.570559458080892368 	8.70744953606769378 	
]
] 
