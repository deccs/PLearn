Type !? to get some help.
!R 0 
!R 0 
!R 0 
!R 1 GaussianProcessRegressor(
kernel = *1 ->SummationKernel(
terms = 2 [ *2 ->RationalQuadraticARDKernel(
isp_alpha = 4137.9189880121985 ;
isp_signal_sigma = 25.2522546527682366 ;
isp_global_sigma = 0 ;
isp_input_sigma = 1 [ 20.5437932346225374 ] ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
*3 ->IIDNoiseKernel(
isp_noise_sigma = -1.92253519592071265 ;
isp_kronecker_sigma = -100 ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
] ;
input_indexes = []
;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 0 ;
data_inputsize = 1 ;
n_examples = 5  )
;
weight_decay = 0 ;
include_bias = 1 ;
compute_confidence = 1 ;
confidence_epsilon = 1.00000000000000002e-08 ;
hyperparameters = 3 [ ("terms[0].isp_signal_sigma" , "0.0" )("terms[0].isp_alpha" , "0.0" )("terms[1].isp_noise_sigma" , "0.0" )] ;
ARD_hyperprefix_initval = ("terms[0].isp_input_sigma" , "0.0" );
optimizer = *4 ->ConjGradientOptimizer(
verbosity = 1 ;
expected_red = 1 ;
no_negative_gamma = 1 ;
sigma = 0.100000000000000006 ;
rho = 0.0500000000000000028 ;
constrain_limit = 0.100000000000000006 ;
max_extrapolate = 3 ;
max_eval_per_line_search = 20 ;
slope_ratio = 10 ;
minibatch_n_samples = 0 ;
minibatch_n_line_searches = 3 ;
nstages = 1 ;
early_stop = 0  )
;
save_gram_matrix = 0 ;
solution_algorithm = "exact" ;
active_set_indices = []
;
alpha = 5  1  [ 
-1.18978376207412251 	
-1.51050223666584205 	
2.48105677760051924 	
0.377930906671194056 	
-0.305796404967886237 	
]
;
gram_inverse = 5  5  [ 
2.31013968379537182 	-0.0536442038211801253 	-2.36779854974030668 	0.22569490209109197 	-0.0147406401474149042 	
-0.0536442038211802363 	2.78367241543547994 	-2.49816636895636401 	-0.330531908021966248 	0.0204783918621609592 	
-2.36779854974030668 	-2.49816636895636446 	4.83232378742233681 	0.0288243957181120274 	-0.000396768649140989422 	
0.22569490209109197 	-0.330531908021966248 	0.0288243957181120274 	0.123220344867242149 	-0.00907667066269107932 	
-0.0147406401474149077 	0.0204783918621609627 	-0.000396768649140989639 	-0.00907667066269108105 	0.0400706678382072579 	
]
;
subgram_inverse = 0  0  [ 
]
;
target_mean = 1 [ 10 ] ;
training_inputs = 5  1  [ 
5 	
6 	
5.5 	
10 	
20 	
]
;
expdir = "" ;
random_gen = *0 ;
seed = 1827 ;
stage = 100 ;
n_examples = 5 ;
inputsize = 1 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 100 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827 ;
finalized = 0  )

!R 1 1 [ 14.948418736085145 ] 
!R 1 1 [ 14.4380583444163992 ] 
!R 2 4  1  [ 
13.4975472944014498 	
14.4134624243872214 	
14.948418736085145 	
14.4380583444163992 	
]
1 [ 4  4  [ 
0.480063689375973601 	0.265505446046397253 	0.0610095684567859564 	-0.525180535128360049 	
0.265505446046397253 	0.368355224390657432 	0.0984353299046141217 	-0.345547507812195676 	
0.0610095684567859564 	0.0984353299046141217 	0.27067133381043279 	0.175932735038120569 	
-0.525180535128363601 	-0.345547507812199228 	0.175932735038117016 	2.09240713218070962 	
]
] 
!R 0 
!R 0 
!R 0 
!R 1 GaussianProcessRegressor(
kernel = *1 ->SummationKernel(
terms = 2 [ *2 ->RationalQuadraticARDKernel(
isp_alpha = 4137.9189880121985 ;
isp_signal_sigma = 25.2522546527682366 ;
isp_global_sigma = 0 ;
isp_input_sigma = 1 [ 20.5437932346225374 ] ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
*3 ->IIDNoiseKernel(
isp_noise_sigma = -1.92253519592071265 ;
isp_kronecker_sigma = -100 ;
kronecker_indexes = []
;
cache_threshold = 1000000 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 1 ;
data_inputsize = 1 ;
n_examples = 5  )
] ;
input_indexes = []
;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 0 ;
data_inputsize = 1 ;
n_examples = 5  )
;
weight_decay = 0 ;
include_bias = 1 ;
compute_confidence = 1 ;
confidence_epsilon = 1.00000000000000002e-08 ;
hyperparameters = 3 [ ("terms[0].isp_signal_sigma" , "0.0" )("terms[0].isp_alpha" , "0.0" )("terms[1].isp_noise_sigma" , "0.0" )] ;
ARD_hyperprefix_initval = ("terms[0].isp_input_sigma" , "0.0" );
optimizer = *4 ->ConjGradientOptimizer(
verbosity = 1 ;
expected_red = 1 ;
no_negative_gamma = 1 ;
sigma = 0.100000000000000006 ;
rho = 0.0500000000000000028 ;
constrain_limit = 0.100000000000000006 ;
max_extrapolate = 3 ;
max_eval_per_line_search = 20 ;
slope_ratio = 10 ;
minibatch_n_samples = 0 ;
minibatch_n_line_searches = 3 ;
nstages = 1 ;
early_stop = 0  )
;
save_gram_matrix = 0 ;
solution_algorithm = "projected-process" ;
active_set_indices = 5 [ 0 1 2 3 4 ] ;
alpha = 5  1  [ 
-1.18978376907293937 	
-1.51050224487545104 	
2.48105679258359446 	
0.377930906889508422 	
-0.305796404977936809 	
]
;
gram_inverse = 5  5  [ 
396.604919126663106 	463.341455779605496 	-847.31996352349006 	-12.1558868422838877 	0.556064853803424519 	
463.34145577960544 	544.763973219138165 	-993.089361861597467 	-14.5987162672844573 	0.6745157046565875 	
-847.319963523489832 	-993.089361861597467 	1813.18952986328532 	26.336693514953943 	-1.21091730158664102 	
-12.1558868422838859 	-14.598716267284459 	26.3366935149539465 	0.41887278420359092 	-0.0199830935494544268 	
0.556064853803424408 	0.6745157046565875 	-1.21091730158664102 	-0.0199830935494544198 	0.00118061341927770506 	
]
;
subgram_inverse = 5  5  [ 
398.915056412611648 	463.287808763247369 	-849.687756940042959 	-11.9301918654121035 	0.54132421021357302 	
463.287808763247483 	547.547642335624914 	-995.587522209615713 	-14.9292480875924749 	0.694994092480937353 	
-849.687756940042959 	-995.587522209615713 	1818.02184266184099 	26.3655177505849494 	-1.21131406286636301 	
-11.9301918654121053 	-14.9292480875924749 	26.3655177505849529 	0.542093126738621423 	-0.029059764104784086 	
0.541324210213573132 	0.694994092480937353 	-1.21131406286636301 	-0.029059764104784086 	0.0412512812525426542 	
]
;
target_mean = 1 [ 10 ] ;
training_inputs = 5  1  [ 
5 	
6 	
5.5 	
10 	
20 	
]
;
expdir = "" ;
random_gen = *0 ;
seed = 1827 ;
stage = 100 ;
n_examples = 5 ;
inputsize = 1 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 100 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827 ;
finalized = 0  )

!R 1 1 [ 14.9484187360853262 ] 
!R 1 1 [ 14.4380583447243644 ] 
!R 2 4  1  [ 
13.4975472943123123 	
14.413462424307447 	
14.9484187360853262 	
14.4380583447243644 	
]
1 [ 4  4  [ 
0.480063689691387074 	0.265505446333293094 	0.0610095684079006162 	-0.525180536496257844 	
0.265505446332181094 	0.368355224650399882 	0.09843532986322856 	-0.345547509035363021 	
0.0610095684061207066 	0.0984353298624789375 	0.270671333777680323 	0.175932735023305753 	
-0.52518053649836105 	-0.345547509036720157 	0.175932735022545472 	2.09240713680968238 	
]
] 
