*12 -> PTester(
    dataset = *1 -> AutoVMatrix(
        inputsize = 1,
        specification = "PLEARNDIR:examples/data/test_suite/sin_signcos_1x_2y.amat",
        targetsize = 2,
        weightsize = 0
        ),
    expdir = "expdir",
    learner = *10 -> HyperLearner(
        learner = *3 -> KernelRidgeRegressor(
            kernel = *2 -> GaussianKernel( sigma = 1.0 ),
            weight_decay = 0.0
            ),
        option_fields = [
            "weight_decay",
            "kernel.sigma"
            ],
        provide_learner_expdir = 1,
        provide_strategy_expdir = 1,
        save_final_learner = 1,
        strategy = [
            *6 -> HyperOptimize(
                oracle = *4 -> CartesianProductOracle(
                    option_names = [
                        "weight_decay",
                        "kernel.sigma"
                        ],
                    option_values = [
                        [
                            "1e-8",
                            "1e-6",
                            "1e-4",
                            "1e-2",
                            "1e0"
                            ],
                        [
                            "1e-2",
                            "1e-1",
                            "1e0",
                            "1e1",
                            "1e2"
                            ]
                        ]
                    ),
                splitter = *5 -> KFoldSplitter( K = 10 ),
                which_cost = 0
                ),
            *8 -> HyperRetrain( splitter = *7 -> FractionSplitter( splits = 1 1 [ (0, 1) ] ) )
            ],
        tester = *9 -> PTester(
            provide_learner_expdir = 1,
            statnames = [
                "E[test.E[mse]]",
                "E[train.E[mse]]"
                ]
            )
        ),
    provide_learner_expdir = 1,
    save_test_costs = 1,
    save_test_outputs = 1,
    splitter = *11 -> FractionSplitter(
        splits = 1 3 [
                (0, 0.75),
                (0.75, 1),
                (0, 1)
                ]
        ),
    statnames = [
        "E[test1.E[mse]]",
        "E[test2.E[mse]]"
        ]
    )
