PTester(
expdir = "PYTEST__PL_kernel_ridge_regressor__RESULTS:expdir/" ;
dataset = *1 ->AutoVMatrix(
filename = "PLEARNDIR:examples/data/test_suite/sin_signcos_1x_2y.amat" ;
load_in_memory = 0 ;
writable = 0 ;
length = 300 ;
width = 3 ;
inputsize = 1 ;
targetsize = 2 ;
weightsize = 0 ;
extrasize = 0 ;
metadatadir = "PLEARNDIR:examples/data/test_suite/sin_signcos_1x_2y.amat.metadata/"  )
;
splitter = *2 ->FractionSplitter(
round_to_closest = 0 ;
splits = 1  3  [ 
(0 , 0.75 )	(0.75 , 1 )	(0 , 1 )	
]
 )
;
statnames = 3 [ "E[train.E[mse]]" "E[test1.E[mse]]" "E[test2.E[mse]]" ] ;
statmask = []
;
learner = *3 ->KernelRidgeRegressor(
kernel = *4 ->GaussianKernel(
sigma = 1 ;
scale_by_sigma = 0 ;
is_symmetric = 1 ;
report_progress = 0 ;
specify_dataset = *0 ;
cache_gram_matrix = 0 ;
data_inputsize = -1 ;
n_examples = -1  )
;
weight_decay = 1.00000000000000002e-08 ;
include_bias = 1 ;
params = 0  0  [ 
]
;
training_inputs = *0 ;
random_gen = *0 ;
seed = 1827 ;
stage = 0 ;
n_examples = -1 ;
inputsize = -1 ;
targetsize = -1 ;
weightsize = -1 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
perf_evaluators = {};
report_stats = 1 ;
save_initial_tester = 1 ;
save_stat_collectors = 1 ;
save_learners = 1 ;
save_initial_learners = 0 ;
save_data_sets = 0 ;
save_test_outputs = 1 ;
call_forget_in_run = 1 ;
save_test_costs = 1 ;
save_test_names = 1 ;
provide_learner_expdir = 1 ;
should_train = 1 ;
should_test = 1 ;
template_stats_collector = *0 ;
global_template_stats_collector = *0 ;
final_commands = []
;
save_test_confidence = 0 ;
enforce_clean_expdir = 1  )
