*1 ->GaussMix(
L = 1 ;
type = "general" ;
n_eigen = 2 ;
alpha_min = 1.00000000000000008e-05 ;
sigma_min = 1.00000000000000008e-05 ;
epsilon = 9.99999999999999955e-07 ;
kmeans_iterations = 5 ;
alpha = 1 [ 1 ] ;
eigenvalues = 1  3  [ 
12666.493023310637 	458.78102343697833 	0.573484989951886903 	
]
;
eigenvectors = 1 [ 3  4  [ 
-0.890970870803750148 	-0.453973947316771542 	-0.000988821712955273565 	-0.00880822163979268734 	
-0.453881809086822574 	0.890872754753084917 	0.0172789682695909941 	-0.00620286016779083519 	
0.00809837125651701253 	-0.0159165495123831172 	0.99372796630332072 	-0.110389351032057381 	
]
] ;
D = 4 ;
diags = 0  0  [ 
]
;
log_coeff = 1 [ -10.9073748495363212 ] ;
log_p_j_x = 1 [ 0 ] ;
log_p_x_j_alphaj = 1 [ 0 ] ;
mu = 1  4  [ 
-1.50779199999992364 	5.35029800000000844 	-0.0868066666666664766 	-0.062603333333333358 	
]
;
mu_y_x = 1  4  [ 
-1.50779199999992364 	5.35029800000000844 	-0.0868066666666664766 	-0.062603333333333358 	
]
;
n_eigen_computed = 3 ;
n_tries = 10 [ 1 1 1 1 1 1 1 1 1 1 ] ;
nsamples = 150 ;
p_j_x = 1 [ 0 ] ;
sigma = TVec(0 0 *0 )
;
training_time = -1 ;
conditional_updating_time = -1 ;
outputs_def = "l" ;
conditional_flags = 4 [ 2 2 1 1 ] ;
provide_input = TVec(0 0 *0 )
;
n_curve_points = -1 ;
lower_bound = 0 ;
upper_bound = 0 ;
cond_sort = 4 [ 2 3 0 1 ] ;
n_input = 2 ;
n_target = 2 ;
n_margin = 0 ;
expdir = "PYTEST__PL_GaussMix__RESULTS:expdir_gaussmix_L=1_type=general_n_eigen=2_kmeans_iterations=5_conditional_flags=2211_seed=123456_nstages=10/Split0/LearnerExpdir/" ;
seed = 123456 ;
stage = 10 ;
n_examples = 150 ;
inputsize = 4 ;
targetsize = 0 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 10 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = ""  )
