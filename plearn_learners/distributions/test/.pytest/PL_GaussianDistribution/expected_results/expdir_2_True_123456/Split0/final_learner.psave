*1 ->GaussianDistribution(
k = 2 ;
gamma = 0 ;
min_eig = 0 ;
use_last_eig = 1 ;
given_mu = []
;
mu = 4 [ -0.0868066666666664488 -0.0626033333333333025 -1.50779199999991498 5.35029800000000844 ] ;
covarmat = 4  4  [ 
0.715700285995525709 	-0.00151849129753913966 	7.56589645354362883 	12.7390914968322093 	
-0.00151849129753913966 	1.0095320630089486 	100.696078851570505 	48.1153474461677817 	
7.56589645354362883 	100.696078851570505 	10149.543581877524 	4937.80362099732884 	
12.7390914968322093 	48.1153474461677817 	4937.80362099732884 	2974.58090941429145 	
]
;
eigenvalues = 2 [ 12666.4930233106388 458.781023436978387 ] ;
eigenvectors = 2  4  [ 
-0.0009888217129552753 	-0.00880822163979269081 	-0.890970870803750703 	-0.453973947316771431 	
0.0172789682695909455 	-0.00620286016779082999 	-0.453881809086822519 	0.890872754753085139 	
]
;
outputs_def = "l" ;
n_curve_points = -1 ;
lower_bound = 0 ;
upper_bound = 0 ;
n_predicted = 4 ;
random_gen = *2 ->PRandom(
seed = 123456 ;
fixed_seed = 0  )
;
seed = 123456 ;
stage = 0 ;
n_examples = 150 ;
inputsize = 4 ;
targetsize = 0 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
