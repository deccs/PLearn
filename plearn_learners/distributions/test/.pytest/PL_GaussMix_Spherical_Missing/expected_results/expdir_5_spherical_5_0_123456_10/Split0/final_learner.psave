*1 ->GaussMix(
L = 5 ;
type = "spherical" ;
n_eigen = -1 ;
efficient_missing = 0 ;
efficient_k_median = 1 ;
max_samples_in_cluster = -1 ;
min_samples_in_cluster = 1 ;
efficient_k_median_iter = 100 ;
impute_missing = 0 ;
kmeans_iterations = 5 ;
alpha_min = 9.99999999999999955e-07 ;
sigma_min = 9.99999999999999955e-07 ;
epsilon = 9.99999999999999955e-07 ;
alpha = 5 [ 0.363699702800992453 0.0890243782270801615 0.130260883589417398 0.236350133706903276 0.180664901756201896 ] ;
center = 5  4  [ 
-0.0125865667046980538 	-0.306519239748860917 	-28.8984673643805756 	-6.4595515250526585 	
0.252614286375679342 	-0.689891635885898635 	-179.972699785840348 	34.2992654738545468 	
0.173281083462829694 	1.21710698435076692 	170.282688621716147 	81.411202919800246 	
0.158287404000658077 	0.610117578217475809 	80.4741799931530863 	45.4914411520717792 	
-0.191523741017846139 	-1.04377930953277742 	-114.146850064020796 	-56.5389961096353417 	
]
;
sigma = 5 [ 16.8498752412780775 12.8923048550582777 25.5669352996753396 17.8025810891328824 21.1242425736516388 ] ;
diags = 0  0  [ 
]
;
eigenvalues = 0  0  [ 
]
;
eigenvectors = TVec(0 0 *0 )
;
n_eigen_computed = -1 ;
D = 4 ;
outputs_def = "l" ;
predictor_size = 0 ;
predicted_size = -1 ;
predictor_part = TVec(0 0 *0 )
;
n_curve_points = -1 ;
lower_bound = 0 ;
upper_bound = 0 ;
n_predictor = 0 ;
n_predicted = 4 ;
expdir = "" ;
seed = 123456 ;
stage = 10 ;
n_examples = 150 ;
inputsize = 4 ;
targetsize = 0 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 10 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = ""  )
