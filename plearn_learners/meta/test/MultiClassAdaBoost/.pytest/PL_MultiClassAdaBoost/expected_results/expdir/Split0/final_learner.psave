*1 ->HyperLearner(
tester = *2 ->PTester(
expdir = "" ;
dataset = *3 ->MemoryVMatrix(
data = 200  6  [ 
0.337040679017727052 	0.412187421639805485 	0.000975192502189414778 	0.15342979927457695 	2.77555756156289135e-16 	1 	
0.837768842251384371 	0.629942465869766655 	0.99999866745689503 	0.978455821589285457 	1 	2 	
0.441028250703420444 	0.714550797205845578 	0.999661619121736456 	0.608818846025308336 	1 	2 	
0.722711173292159503 	0.534139299013230762 	0.997887018334026488 	0.886113226735210535 	0.999999999976055154 	2 	
0.299130871933929676 	0.360203732190537917 	4.5306261716615559e-05 	0.0928636905426252213 	0 	0 	
0.411124184726996522 	0.639982916836899007 	0.981226002279039111 	0.464305822137039914 	1 	2 	
0.710499249124032395 	0.539688826170337976 	0.997717138254322289 	0.875929972112166055 	0.999999999999153344 	2 	
0.184288240546414961 	0.473853871201329102 	0.000206568890665281835 	0.0439810027269273429 	6.28895564069864577e-07 	0 	
0.247835468384202062 	0.589217134980148494 	0.125253987172025016 	0.134643618374606644 	0.999999999999998446 	2 	
0.819995942533578437 	0.3742750365623283 	0.920000218196554864 	0.925438956030885773 	1.72362124573055553e-13 	2 	
0.208071391136063988 	0.288296895519905672 	1.48940319855128678e-07 	0.0271273696801949682 	0 	0 	
0.964567830275638527 	0.267751622669661571 	0.998437149798841572 	0.996322178190460095 	0 	2 	
0.622142023781279918 	0.569475125142184568 	0.994985677375217148 	0.781983006857181917 	0.999999999999999889 	2 	
0.656000195973205136 	0.632384490644939956 	0.999825304257418446 	0.86209851532548476 	1 	2 	
0.497917512041781807 	0.445255345050883378 	0.0961894574372425537 	0.441785210713063148 	0.00197616314790682868 	1 	
0.678670792025397485 	0.841421101756496204 	0.999999998654930278 	0.959419859808275932 	1 	2 	
0.283249432531651968 	0.394384255062699751 	0.000132176529349881111 	0.0922296303861396272 	0 	0 	
0.821939000754816407 	0.661650928488066725 	0.999999416552044829 	0.976559491191049567 	1 	2 	
0.623898818861622462 	0.568805675730366778 	0.995035619407568017 	0.783844059008265814 	1 	1 	
0.64844932725094484 	0.369018445347890467 	0.090859937004917124 	0.665359349749000017 	3.77475828372553224e-15 	1 	
0.617788016990077793 	0.845311267104432718 	0.999999996183034146 	0.934589218828132506 	1 	2 	
0.560568598210385627 	0.572297230594697615 	0.984167012020504606 	0.685246751326321069 	0.99999999999999889 	1 	
0.730797004413526241 	0.78620836832089469 	0.999999985005914471 	0.964466185212620175 	1 	2 	
0.634618032132718835 	0.750340665972830778 	0.999998947993276044 	0.900715501675833585 	1 	2 	
0.52095022666103985 	0.80575351668482309 	0.999999564090173987 	0.830723002874528271 	1 	2 	
0.787660374462927582 	0.642419269024499417 	0.999995935842380668 	0.96105907030885418 	1 	2 	
0.747573026163381504 	0.408777845324890643 	0.850478635167357888 	0.858465136763180037 	4.27088420185128825e-10 	1 	
0.344049451797056649 	0.59974194633533795 	0.693694777941641361 	0.292132388915243735 	0.999999999999863221 	1 	
0.380091470145261345 	0.390005285685505743 	0.000988058603141606095 	0.193680526820496524 	0 	0 	
0.136071444498306604 	0.174038733327655182 	1.67205693735184013e-11 	0.00519572415845664937 	0 	0 	
0.854708697955331553 	0.722448573065056387 	0.999999990058421329 	0.989025437968076515 	1 	2 	
0.757560278233593398 	0.483466030526050028 	0.993536629503178892 	0.901417965358118689 	0.99950050332745155 	2 	
0.883841283359871888 	0.51078332768391177 	0.999974531176691217 	0.983705356763069472 	0.999999999999489519 	2 	
0.499495000171716774 	0.128114914706039529 	4.6449742940879446e-09 	0.127761238240634289 	0 	0 	
0.518898492739471973 	0.278079094080102784 	0.000104947015177880854 	0.309516644117132977 	0 	0 	
0.65642431966618342 	0.694308507904370042 	0.999989248773869965 	0.892398673461820557 	1 	2 	
0.244436179936414477 	0.674302546821647364 	0.836802915551401627 	0.178239622821568466 	1 	1 	
0.231735044202631524 	0.68041073208306635 	0.826919421809612087 	0.162198541462586776 	1 	1 	
0.420495414774386123 	0.386383438501044674 	0.00196719004512274642 	0.249052878710770975 	0 	1 	
0.464482422012391649 	0.128947152459879366 	2.4809357901389717e-09 	0.100213915042869361 	0 	0 	
0.771956182942409086 	0.590668595471845581 	0.99994253517097742 	0.943001342964679301 	1 	2 	
0.324400846566160694 	0.392763663780197392 	0.000326988014224482981 	0.129919580057503758 	0 	0 	
0.104807823195401495 	0.662371410949871287 	0.0182405353402941284 	0.0261731357173424217 	1 	1 	
0.440594416537475053 	0.256177855855037051 	7.11662389785150395e-06 	0.176037206805503443 	0 	0 	
0.625115862267542122 	0.37115850993626881 	0.0620416273826774334 	0.621408291026117499 	1.66533453693773481e-16 	0 	
0.432416163989962576 	0.202030774074823449 	2.77740037468721113e-07 	0.12810151112620638 	0 	0 	
0.236708604174129145 	0.231879283006988346 	1.80263723947859944e-08 	0.0282227012152627688 	0 	0 	
0.847015190912564275 	0.465124225802565849 	0.99922322286709675 	0.963882434314954462 	0.992415987887875772 	2 	
0.538160645477002486 	0.737008943262299265 	0.999984420515098726 	0.791912130614169874 	1 	2 	
0.28333470835393415 	0.182425523806356349 	2.95443025599695375e-09 	0.0336709161573283122 	0 	0 	
0.587768965659763665 	0.547778771470676551 	0.975656839533297071 	0.711483510236805339 	0.999999999999949818 	2 	
0.618892475744320492 	0.332005146247901783 	0.0102816464864412538 	0.566975061872418307 	0 	1 	
0.694461302348206133 	0.609190310086851761 	0.99980542533631811 	0.88951435084880881 	1 	2 	
0.565943613014406988 	0.506652107479236169 	0.831002657098736996 	0.635906306170384461 	0.999955927919579879 	1 	
0.383086029073044121 	0.945550827907227998 	0.999999999995657696 	0.870359374800871999 	1 	2 	
0.735058297271116379 	0.533385253030013939 	0.998405580711887009 	0.897825170411419959 	0.999999999999998668 	2 	
0.247867159961008499 	0.587887685889858735 	0.11945303331244056 	0.134080683707188841 	0.999999999914290782 	1 	
0.31437592471957404 	0.748901091228292737 	0.999114931451879573 	0.385305232435436462 	1 	2 	
0.356049980032269731 	0.893799247488805126 	0.999999989146302282 	0.719902897371154649 	1 	2 	
0.234179480769041271 	0.370334983797080408 	1.32408575363451853e-05 	0.0521402176285982177 	0 	0 	
0.189684732456134986 	0.38424234704007143 	6.29266245716353367e-06 	0.0330792608751452888 	0 	0 	
0.207031917429434331 	0.565840436553556536 	0.0168649332947274355 	0.0816482575673892486 	0.99999999937393691 	1 	
0.489069241863633541 	0.385463930848654379 	0.00751776669233639172 	0.365124621784082615 	0 	1 	
0.554223418555835012 	0.262956169409198082 	9.92380307193729827e-05 	0.35573593061885489 	0 	0 	
0.546450670398301863 	0.275978125137457453 	0.000164348010774972852 	0.356545375200074566 	0 	0 	
0.331477526458701544 	0.544313426940081446 	0.150549210479969497 	0.226920877779638486 	0.999999973227484795 	1 	
0.608447255824831057 	0.576250504093414606 	0.994923430289251121 	0.766880537582550481 	1 	2 	
0.74833652534817019 	0.217437897918653533 	0.000637167891637702155 	0.710754238216330991 	0 	1 	
0.441918384856973989 	0.232118037868229266 	1.98305498017026238e-06 	0.159403906727846767 	0 	0 	
0.190465240239958922 	0.205912881869682318 	9.90857895732943916e-10 	0.014155296160479891 	0 	0 	
0.832796822890589872 	0.416922441027541113 	0.99074882064070191 	0.9466578043680558 	4.36913572099406622e-07 	1 	
0.328675871745063797 	0.276433934128551662 	1.86322469714061967e-06 	0.0840677020810715048 	0 	0 	
0.441644647089275755 	0.535400668942389912 	0.561201571146024536 	0.418897719404788704 	0.999999996397940238 	2 	
0.253670691389482728 	0.458786221981034303 	0.000868408106177720462 	0.0890735277355632071 	6.48091025290398193e-10 	1 	
0.585589013754027388 	0.224171518555312144 	2.28533497587668499e-05 	0.365583725331242504 	0 	0 	
0.58986806678244541 	0.301534783997461253 	0.00138193182218504518 	0.47202923266442659 	0 	1 	
0.85200702932755279 	0.811420997797132615 	0.999999999927318139 	0.993037708645332362 	1 	2 	
0.392618188076281682 	0.680723781534957939 	0.995455985334303017 	0.471184465788363038 	1 	2 	
0.293918116463156132 	0.507311978686203147 	0.016469475112039389 	0.151277035115703007 	0.0121899329063093198 	1 	
0.44097155133617183 	0.518326786127685679 	0.388719008958370693 	0.400848725095580616 	0.999915657472835395 	1 	
0.527938368925109258 	0.640300813976747207 	0.998214144045750151 	0.690179796975922688 	1 	2 	
0.303877709616286351 	0.433800927030910277 	0.00110349363209288898 	0.127343927610726104 	6.8489658389125907e-13 	0 	
0.413583708380048265 	0.495437626628920491 	0.126920024706036194 	0.328236931934144105 	0.4510101768362893 	2 	
0.371933728396660779 	0.493815315450534476 	0.053806134247652182 	0.254998228149233563 	0.020177763157040729 	1 	
0.42880705432535704 	0.710649379795884273 	0.99947513790175524 	0.580812579989998579 	1 	2 	
0.519185575742599603 	0.860101109434101785 	0.999999991171935276 	0.877510112077225846 	1 	2 	
0.433248369780109721 	0.603801463339838751 	0.9463565486409109 	0.470840625378211142 	1 	2 	
0.333090528816623599 	0.178629567229022346 	7.35518734806817065e-09 	0.0515043955812375387 	0 	0 	
0.363841364105409126 	0.420173792266473223 	0.00243767478559564488 	0.191508185938040587 	1.49880108324396133e-15 	1 	
0.258024822034749468 	0.778690243501383939 	0.999324390855314215 	0.298376672395714193 	1 	2 	
0.308444816500438312 	0.205530525293464994 	2.36985961965530123e-08 	0.0489708262894453794 	0 	0 	
0.275265359242249819 	0.356809252589806836 	2.18167656550471989e-05 	0.0740054232710109505 	0 	0 	
0.447978933902173193 	0.807225196990252192 	0.999998285967393041 	0.73374557424670217 	1 	2 	
0.569710475705847208 	0.124579530102164993 	1.386039960582508e-08 	0.200000697780095438 	0 	0 	
0.907073953054543303 	0.320080909610997666 	0.979327058711887077 	0.97818028340714902 	0 	1 	
0.346022306600591856 	0.33957471551374363 	5.35527421994252961e-05 	0.125863341080325264 	0 	0 	
0.603964125026318244 	0.633402136580338504 	0.999488949006740235 	0.800804485191756843 	1 	2 	
0.684720245521482473 	0.837664162630183062 	0.999999998453590444 	0.960523011225891343 	1 	2 	
0.708090895277180166 	0.471418691600586415 	0.963949563452032532 	0.840129240225992779 	0.000781299807628477172 	1 	
0.771582763339008881 	0.645452661865975386 	0.999994314239608828 	0.954011308682431336 	1 	2 	
0.460149701882857753 	0.332311270435153072 	0.000419402495029586042 	0.265641436326872871 	0 	0 	
0.831530044133463875 	0.529186781004250317 	0.999893949594790166 	0.964762122623453844 	0.999999999999998224 	2 	
0.65018898152607485 	0.387873429950195248 	0.187975328574094158 	0.686548020585021845 	1.37057032389975575e-13 	0 	
0.424831603024144355 	0.785299307796495372 	0.999989387209282654 	0.666209358798257378 	1 	2 	
0.223955933194476708 	0.85297906339534868 	0.9999884384030715 	0.325763342209897722 	1 	2 	
0.568189952611602878 	0.5042149001566536 	0.823608596003203242 	0.637266608512469634 	0.999735435267097072 	1 	
0.196164666090740902 	0.698362006304233507 	0.792958232215262515 	0.121199495873135221 	1 	2 	
0.635883152908142013 	0.739603738348431294 	0.999998198375502856 	0.896384266143035013 	1 	2 	
0.766440462928471122 	0.776889333222431144 	0.999999989972555126 	0.974032527455173658 	1 	2 	
0.439712238997702287 	0.223776970430579092 	1.18040709834454915e-06 	0.150663062771468848 	0 	0 	
0.270576426620127486 	0.800109679656329731 	0.999865169866101078 	0.355412841484316178 	1 	2 	
0.595406137160540805 	0.273123998909772792 	0.000387076909607542152 	0.44840679059006272 	0 	1 	
0.709583071638395624 	0.244892645065264869 	0.00111965991489298977 	0.659388419418811988 	0 	0 	
0.631612337149145886 	0.741398499859989402 	0.999998200949979932 	0.893976621243775638 	1 	2 	
0.694771004175420592 	0.532118213643730242 	0.995500010183678841 	0.854748431601624392 	0.99999999999676481 	2 	
0.690109228104916594 	0.857407207850628961 	0.999999999704517029 	0.967619107040243787 	1 	2 	
0.791478407262177441 	0.706123387877502617 	0.999999802130912219 	0.971923386203978446 	1 	2 	
0.591951822229620506 	0.447380558507254611 	0.437225483940870852 	0.630336343554293577 	3.58298156311054328e-07 	1 	
0.416691516057121847 	0.536761047080265952 	0.448011082314667908 	0.371359256055882048 	0.999999999896008296 	2 	
0.241271710605322209 	0.574171145689825524 	0.0606744175626963145 	0.120029588541164689 	0.999999999998035904 	1 	
0.61683834213865274 	0.786651776820837867 	0.999999800892349078 	0.905214887115931233 	1 	2 	
0.893793552025074045 	0.56782679783496337 	0.999998454853059715 	0.989364338420214429 	1 	2 	
0.65921321328677962 	0.755683846757965627 	0.99999953936066821 	0.920540241090206934 	1 	2 	
0.403657119741667958 	0.475973518743775081 	0.0515078153070945288 	0.293677438926866541 	2.50858883715232572e-05 	1 	
0.183188899325371801 	0.79680275397946343 	0.997954101035577246 	0.164779162168442184 	1 	2 	
0.159915087742074802 	0.641405583127205969 	0.0773014406994857461 	0.0607616755376079176 	1 	2 	
0.590438885457506224 	0.42420618845194985 	0.226805116304403587 	0.604891812518721261 	2.96487784323673509e-09 	1 	
0.2739605965980349 	0.488614468492700071 	0.00482695885510686651 	0.119748916573926278 	4.1677502848891379e-06 	2 	
0.265423008491722512 	0.573310286606669717 	0.105633508560364686 	0.149217695648006854 	0.999999999999996669 	1 	
0.260515685218742687 	0.730119706711473304 	0.9913015161315889 	0.25152413682623348 	1 	2 	
0.859460949480679082 	0.482986570768417611 	0.999769089631301733 	0.972226055181255377 	0.999999927521804555 	2 	
0.715253965469259345 	0.501222497563960645 	0.990567622975351059 	0.863734471591099506 	0.999999956288300407 	2 	
0.705809945524337068 	0.544043054318400721 	0.997853911496872081 	0.872929195401613289 	0.999999999703498843 	2 	
0.384680150978340629 	0.709568646181242491 	0.998620053983448219 	0.488109742125673263 	1 	2 	
0.477595014000419482 	0.277766030791077922 	4.52085102251031934e-05 	0.243125441624808647 	0 	0 	
0.363834420308997264 	0.713118834028081405 	0.998188849124578059 	0.448461205598444546 	1 	2 	
0.80244558809579325 	0.420965787314543094 	0.97854438996804638 	0.923014652663194157 	3.32325866825300409e-09 	1 	
0.472425506246140436 	0.761427188712762382 	0.999984163384094682 	0.718962280122859676 	1 	2 	
0.386511475642943525 	0.584620412924011124 	0.751705671104142548 	0.358433429691765726 	0.999999999999998224 	1 	
0.313344389534551349 	0.563876550224456041 	0.205293859180526783 	0.212465091231545666 	0.999999850909174426 	2 	
0.437498628835231718 	0.271487240160874554 	1.47010049714180191e-05 	0.18408839079913808 	0 	0 	
0.349972520410344767 	0.823272754127770234 	0.999995406942313592 	0.574459628804300237 	1 	2 	
0.511535452700446203 	0.163949577360044452 	1.05913818548852845e-07 	0.177025707750321615 	0 	0 	
0.333981910556185979 	0.777083405190116761 	0.999881013318794643 	0.467065256689115749 	1 	2 	
0.733563847159287241 	0.523964125199950947 	0.997583968485294292 	0.89304320560242656 	0.999999987101309107 	1 	
0.664233998157672811 	0.223942029527671616 	0.000121280891147379499 	0.530026326836644524 	0 	0 	
0.747159532501805002 	0.61025399546998349 	0.999949900528595004 	0.931935003882062851 	1 	2 	
0.647068916766090241 	0.842445826312409496 	0.999999997473194568 	0.947256531484346631 	1 	2 	
0.620160612968468916 	0.293360169711035401 	0.00176105431478684737 	0.525328301669363729 	0 	1 	
0.180912118693824064 	0.473026213425085496 	0.000178464923893839611 	0.0419870523418195973 	2.19526119504820372e-10 	0 	
0.171486298949319993 	0.453303976992695201 	5.83472488787095678e-05 	0.034303904575232691 	2.83106871279414918e-14 	1 	
0.480642180523963292 	0.496247570451631481 	0.368762354055697128 	0.457569793089636412 	0.0782792313851559673 	1 	
0.460646565225021232 	0.78734912020993153 	0.99999545505324261 	0.729662318511505426 	1 	2 	
0.467164824120552491 	0.375671870776489891 	0.00321294243586323081 	0.316254176329649583 	0 	0 	
0.43385005121768927 	0.85176982124301015 	0.99999990359908042 	0.771436448839911471 	1 	2 	
0.537295599170006577 	0.625186163434580333 	0.997167078991974876 	0.692086063473239976 	1 	1 	
0.77206002977913113 	0.408222101578465835 	0.915805160160764076 	0.887859404382179029 	5.1289749669614082e-09 	2 	
0.215260988690660682 	0.421377785818776385 	6.51462934598834309e-05 	0.0518779202071764645 	5.5511151231257827e-17 	0 	
0.526240868080626534 	0.344837501105276723 	0.00275164754263412803 	0.393932927643954378 	0 	1 	
0.352332982714121834 	0.228780499937454418 	2.5141515719306895e-07 	0.0807752533440048159 	0 	0 	
0.530556872338403984 	0.435769357914573607 	0.122211770968852884 	0.497170030219862114 	5.83355058703105556e-09 	0 	
0.418968313566468575 	0.676882136091753517 	0.996857941138302728 	0.521337033709274533 	1 	1 	
0.403587313458172448 	0.824644927680108442 	0.999998667856597523 	0.682776283308621723 	1 	2 	
0.361998630782866759 	0.370204408571073618 	0.00028952770396439842 	0.159220420181713229 	0 	1 	
0.908979683193673837 	0.839935736059859939 	0.999999999999364064 	0.99809217160669339 	1 	2 	
0.832844161267142113 	0.489798915748868746 	0.999510418543040791 	0.959708536196156592 	0.999999999975029863 	2 	
0.247191042132576255 	0.565702859063909158 	0.0509387213597051192 	0.123082290071373113 	0.999999999999863887 	1 	
0.236347439196011755 	0.4184425886375715 	0.000105586969146143073 	0.064450896143266434 	1.17683640610266593e-14 	0 	
0.878774939360102647 	0.250912786885272465 	0.262483546060253647 	0.946270181212051198 	0 	1 	
0.560856785545585934 	0.387939911774027868 	0.0343357208576768325 	0.507874348900542727 	3.68705066478014487e-13 	1 	
0.61900332590026208 	0.209175906866663652 	1.89742269794956897e-05 	0.411150816107167638 	0 	0 	
0.198155916735463955 	0.72655228198141264 	0.941735419830920351 	0.13952389135164156 	1 	2 	
0.869351838403421562 	0.6676266001109048 	0.999999928312545139 	0.988892993459312253 	1 	2 	
0.314412568305269202 	0.379561463986388015 	0.000148908442682282871 	0.114100891594720921 	0 	0 	
0.670922423671947432 	0.408098903170796223 	0.460947205585807318 	0.741358235198477655 	2.63092586605395695e-09 	2 	
0.307845747776586576 	0.107073381074912766 	1.06973874203220021e-11 	0.0231603669418962155 	0 	0 	
0.764897455283813699 	0.67360817009344176 	0.99999804306670792 	0.956255113223712705 	1 	2 	
0.602099322710622831 	0.705791257374221992 	0.999980034404002849 	0.845851840468065497 	1 	2 	
0.498410005359550323 	0.443684957890750631 	0.0916210989854581159 	0.440416965031909857 	9.98667815110820811e-12 	0 	
0.2494982653002355 	0.551907308225648374 	0.0315959640562301081 	0.119655134207207636 	0.999999866082263766 	1 	
0.371349918041573357 	0.649128355496379927 	0.971250387171610163 	0.392262925955319308 	1 	2 	
0.676505835838878578 	0.232669252996851095 	0.000262714478394654449 	0.569629577497201667 	0 	0 	
0.630375954790908244 	0.224279366557609772 	5.88853110093379151e-05 	0.45672355544882115 	0 	0 	
0.300711932385879122 	0.149829364552470645 	4.24941304366655004e-10 	0.031597799967373108 	0 	0 	
0.584741827477265108 	0.0924290853768408027 	6.64550636741978451e-10 	0.168118627952250577 	0 	0 	
0.201814833111637948 	0.540414142004595033 	0.00519546572841989018 	0.0699693665010114874 	0.999805662526560335 	1 	
0.558190128039561695 	0.616932877239985022 	0.997360703265658066 	0.720076277306989421 	1 	2 	
0.470688646750369089 	0.210093817686775486 	9.85101667738685904e-07 	0.173895030928417071 	0 	0 	
0.532031073717923908 	0.760036567480947722 	0.999994818185025225 	0.803668134940642487 	1 	2 	
0.208994001596146228 	0.76073439080480787 	0.992696853128328893 	0.18157395531864462 	1 	2 	
0.116346727192441657 	0.167537635143858665 	4.31321645066873316e-12 	0.0034723336958780715 	0 	0 	
0.134669253672196843 	0.830249986777758409 	0.998603683097191275 	0.105850998399096619 	1 	2 	
0.549769642170096162 	0.552231256528370573 	0.95671254064267286 	0.647573451897092478 	0.999840819088372856 	2 	
0.165243489232508756 	0.537479564772721186 	0.0013631676983125729 	0.0434812741523764035 	0.925412731147525536 	1 	
0.317949746542236178 	0.74753339550780562 	0.999123747824000263 	0.3910073121171318 	1 	2 	
0.392801824493781482 	0.487425152233795955 	0.0641128554671341333 	0.284365332967790707 	0.994211403487852863 	1 	
0.710161800997805237 	0.271536688465156772 	0.00455234525237191434 	0.690991769450284621 	0 	0 	
0.258779846056689244 	0.328034106346786924 	3.98635217790932472e-06 	0.0561383721754414866 	0 	0 	
0.606341601082149295 	0.530905550153722428 	0.967631950849599187 	0.728364397980203471 	0.999999999996517897 	0 	
0.600135566392399955 	0.291099509296859849 	0.00103701637983616424 	0.48018039043485411 	0 	0 	
]
;
fieldinfos = 6 [ "x1" 0 "x2" 0 "x3" 0 "x4" 0 "y1" 0 "target" 0 ] ;
fieldnames = []
;
deep_copy_memory_data = 1 ;
writable = 0 ;
length = 200 ;
width = 6 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 0 ;
extrasize = 0 ;
metadatadir = "" ;
source = *0  )
;
splitter = *4 ->FractionSplitter(
round_to_closest = 0 ;
splits = 1  3  [ 
(0 , 0.75 )	(0 , 0.75 )	(0.75 , 1 )	
]
;
one_is_absolute = 0  )
;
statnames = 8 [ "E[test1.E[class_error]]" "E[test1.E[linear_class_error]]" "E[test1.E[square_class_error]]" "E[test1.E[conflict]]" "E[test2.E[class_error]]" "E[test2.E[linear_class_error]]" "E[test2.E[square_class_error]]" "E[test2.E[conflict]]" ] ;
statmask = []
;
learner = *5 ->MultiClassAdaBoost(
random_gen = *0 ;
seed = 1827 ;
stage = 12 ;
n_examples = 150 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 12 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827 ;
learner1 = *6 ->AdaBoost(
weak_learners = 12 [ *7 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *8 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *9 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *10 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000067 ;
targets_sum = 143 ;
weighted_targets_sum = 0.715000000000000524 ;
weighted_squared_targets_sum = 0.715000000000000524 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.407550000000000079 0 0.407550000000000079 ] ;
split_col = 2 ;
split_balance = 88 ;
split_feature_value = 0.00124141380660278133 ;
after_split_error = 0.120168650793650938 ;
missing_node = *0 ;
missing_leave = *11 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *12 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *13 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 56 ;
weights_sum = 0.280000000000000138 ;
targets_sum = 6 ;
weighted_targets_sum = 0.0300000000000000024 ;
weighted_squared_targets_sum = 0.0300000000000000024 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0535714285714285754 0 0.0535714285714285754 ] ;
split_col = 2 ;
split_balance = 34 ;
split_feature_value = 0.000276121091179526434 ;
after_split_error = 0.0370505050505050421 ;
missing_node = *0 ;
missing_leave = *14 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *15 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *16 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 45 ;
weights_sum = 0.225000000000000117 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0050000000000000001 ;
weighted_squared_targets_sum = 0.0050000000000000001 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0097777777777777776 0 0.0097777777777777776 ] ;
split_col = 4 ;
split_balance = 39 ;
split_feature_value = 2.00395255944840756e-14 ;
after_split_error = 0.00666666666666666623 ;
missing_node = *0 ;
missing_leave = *17 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *18 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999998449 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *19 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 44 ;
weights_sum = 0.220000000000000112 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0050000000000000001 ;
weighted_squared_targets_sum = 0.0050000000000000001 ;
loss_function_factor = 2  )
 )
;
left_leave = *16  ;
right_node = *20 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *21 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 11 ;
weights_sum = 0.0549999999999999933 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0250000000000000014 ;
weighted_squared_targets_sum = 0.0250000000000000014 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0272727272727272679 0 0.0272727272727272679 ] ;
split_col = 2 ;
split_balance = 3 ;
split_feature_value = 0.000981625552665510437 ;
after_split_error = 0.0142857142857142835 ;
missing_node = *0 ;
missing_leave = *22 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *23 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *24 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.0350000000000000033 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0250000000000000014 ;
weighted_squared_targets_sum = 0.0250000000000000014 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0142857142857142835 0 0.0142857142857142835 ] ;
split_col = 2 ;
split_balance = 1 ;
split_feature_value = 0.000528285193333644099 ;
after_split_error = 0.0100000000000000002 ;
missing_node = *0 ;
missing_leave = *25 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *26 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999999837 ;
targets_sum = 0 ;
weighted_targets_sum = -1.73472347597680709e-18 ;
weighted_squared_targets_sum = -1.73472347597680709e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *27 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0300000000000000024 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0250000000000000014 ;
weighted_squared_targets_sum = 0.0250000000000000014 ;
loss_function_factor = 2  )
 )
;
left_leave = *24  ;
right_node = *28 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *29 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 4 ;
weights_sum = 0.0200000000000000004 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.336930458627675344 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *30 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *31 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999999837 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *32 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 3 ;
weights_sum = 0.0149999999999999994 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
right_leave = *29   )
;
right_leave = *21   )
;
left_leave = *13  ;
right_node = *33 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *34 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 144 ;
weights_sum = 0.720000000000000528 ;
targets_sum = 137 ;
weighted_targets_sum = 0.685000000000000497 ;
weighted_squared_targets_sum = 0.685000000000000497 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0665972222222224186 0 0.0665972222222224186 ] ;
split_col = 4 ;
split_balance = 96 ;
split_feature_value = 1.82065853449042692e-07 ;
after_split_error = 0.0549166666666665859 ;
missing_node = *0 ;
missing_leave = *35 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *36 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999995674 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00499999999999995674 ;
weighted_squared_targets_sum = 0.00499999999999995674 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *37 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 143 ;
weights_sum = 0.715000000000000524 ;
targets_sum = 136 ;
weighted_targets_sum = 0.680000000000000493 ;
weighted_squared_targets_sum = 0.680000000000000493 ;
loss_function_factor = 2  )
 )
;
right_leave = *34   )
;
priority_queue = *38 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *33  *15  *23  *28  ]  )
;
first_leave = *10  ;
split_cols = 3 [ 2 2 2 ] ;
split_values = 3 [ 0.00124141380660278133 0.000276121091179526434 0.000981625552665510437 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*39 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *40 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *41 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *42 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1 ;
targets_sum = 143 ;
weighted_targets_sum = 0.423684210526316163 ;
weighted_squared_targets_sum = 0.423684210526316163 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.488351800554016724 0 0.488351800554016724 ] ;
split_col = 1 ;
split_balance = 46 ;
split_feature_value = 0.444470151470817032 ;
after_split_error = 0.204382894399834314 ;
missing_node = *0 ;
missing_leave = *43 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *44 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *45 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 77 ;
weights_sum = 0.581578947368420307 ;
targets_sum = 23 ;
weighted_targets_sum = 0.0605263157894735601 ;
weighted_squared_targets_sum = 0.0605263157894735601 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.108454393903310103 0 0.108454393903310103 ] ;
split_col = 3 ;
split_balance = 57 ;
split_feature_value = 0.700873003833307751 ;
after_split_error = 0.0642055375405336803 ;
missing_node = *0 ;
missing_leave = *46 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *47 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *48 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 67 ;
weights_sum = 0.555263157894736126 ;
targets_sum = 13 ;
weighted_targets_sum = 0.0342105263157894066 ;
weighted_squared_targets_sum = 0.0342105263157894066 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0642055375405336803 0 0.0642055375405336803 ] ;
split_col = 2 ;
split_balance = 65 ;
split_feature_value = 0.207390222439248872 ;
after_split_error = 0.059548872180451011 ;
missing_node = *0 ;
missing_leave = *49 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *50 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00263157894736847043 ;
targets_sum = 0 ;
weighted_targets_sum = 6.07153216591882483e-18 ;
weighted_squared_targets_sum = 6.07153216591882483e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *51 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.552631578947367919 ;
targets_sum = 13 ;
weighted_targets_sum = 0.0342105263157894066 ;
weighted_squared_targets_sum = 0.0342105263157894066 ;
loss_function_factor = 2  )
 )
;
left_leave = *48  ;
right_node = *52 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *53 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 10 ;
weights_sum = 0.026315789473684157 ;
targets_sum = 10 ;
weighted_targets_sum = 0.026315789473684157 ;
weighted_squared_targets_sum = 0.026315789473684157 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 4 ;
split_balance = 0 ;
split_feature_value = 2.1363039115485094e-10 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *54 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *55 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00263157894736841839 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00263157894736841839 ;
weighted_squared_targets_sum = 0.00263157894736841839 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *56 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 9 ;
weights_sum = 0.0236842105263157417 ;
targets_sum = 9 ;
weighted_targets_sum = 0.0236842105263157417 ;
weighted_squared_targets_sum = 0.0236842105263157417 ;
loss_function_factor = 2  )
 )
;
right_leave = *53   )
;
left_leave = *45  ;
right_node = *57 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *58 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 123 ;
weights_sum = 0.41842105263157936 ;
targets_sum = 120 ;
weighted_targets_sum = 0.363157894736842568 ;
weighted_squared_targets_sum = 0.363157894736842568 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0959285004965242383 0 0.0959285004965242383 ] ;
split_col = 1 ;
split_balance = 71 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.07308998302207112 ;
missing_node = *0 ;
missing_leave = *59 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *60 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *61 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 26 ;
weights_sum = 0.163157894736841752 ;
targets_sum = 23 ;
weighted_targets_sum = 0.10789473684210503 ;
weighted_squared_targets_sum = 0.10789473684210503 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0730899830220711477 0 0.0730899830220711477 ] ;
split_col = 1 ;
split_balance = 24 ;
split_feature_value = 0.530046165578986317 ;
after_split_error = 0.0100367197062423141 ;
missing_node = *0 ;
missing_leave = *62 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *63 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0499999999999998918 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0499999999999998918 ;
weighted_squared_targets_sum = 0.0499999999999998918 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *64 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 25 ;
weights_sum = 0.11315789473684186 ;
targets_sum = 22 ;
weighted_targets_sum = 0.0578947368421051448 ;
weighted_squared_targets_sum = 0.0578947368421051448 ;
loss_function_factor = 2  )
 )
;
left_leave = *61  ;
right_node = *65 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *66 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 97 ;
weights_sum = 0.255263157894736969 ;
targets_sum = 97 ;
weighted_targets_sum = 0.255263157894736969 ;
weighted_squared_targets_sum = 0.255263157894736969 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 1 ;
split_feature_value = 0.715222895179832507 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *67 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *68 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0026315789473684288 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0026315789473684288 ;
weighted_squared_targets_sum = 0.0026315789473684288 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *69 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 96 ;
weights_sum = 0.25263157894736854 ;
targets_sum = 96 ;
weighted_targets_sum = 0.25263157894736854 ;
weighted_squared_targets_sum = 0.25263157894736854 ;
loss_function_factor = 2  )
 )
;
right_leave = *66   )
;
right_leave = *58   )
;
priority_queue = *70 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *60  *52  *47  *65  ]  )
;
first_leave = *42  ;
split_cols = 3 [ 1 3 1 ] ;
split_values = 3 [ 0.444470151470817032 0.700873003833307751 0.531511881898726335 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*71 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *72 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *73 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *74 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.000000000000002 ;
targets_sum = 143 ;
weighted_targets_sum = 0.405049302958179425 ;
weighted_squared_targets_sum = 0.405049302958179425 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.481968730262545497 0 0.481968730262545497 ] ;
split_col = 1 ;
split_balance = 6 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.366557859017760723 ;
missing_node = *0 ;
missing_leave = *75 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *76 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *77 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 103 ;
weights_sum = 0.859826589595377389 ;
targets_sum = 46 ;
weighted_targets_sum = 0.264875892553554315 ;
weighted_squared_targets_sum = 0.264875892553554315 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.366557859017760723 0 0.366557859017760723 ] ;
split_col = 1 ;
split_balance = 101 ;
split_feature_value = 0.530046165578986317 ;
after_split_error = 0.287996283877794745 ;
missing_node = *0 ;
missing_leave = *78 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *79 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *80 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 102 ;
weights_sum = 0.58041482488949403 ;
targets_sum = 46 ;
weighted_targets_sum = 0.264875892553554315 ;
weighted_squared_targets_sum = 0.264875892553554315 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.287996283877794745 0 0.287996283877794745 ] ;
split_col = 2 ;
split_balance = 54 ;
split_feature_value = 0.207390222439248872 ;
after_split_error = 0.257105796718174184 ;
missing_node = *0 ;
missing_leave = *81 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *82 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *83 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 78 ;
weights_sum = 0.532471948316900257 ;
targets_sum = 22 ;
weighted_targets_sum = 0.216933015980959681 ;
weighted_squared_targets_sum = 0.216933015980959681 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.257105796718174184 0 0.257105796718174184 ] ;
split_col = 2 ;
split_balance = 68 ;
split_feature_value = 0.09124051799518762 ;
after_split_error = 0.228781330125952642 ;
missing_node = *0 ;
missing_leave = *84 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *85 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00144508670520230014 ;
targets_sum = 0 ;
weighted_targets_sum = -1.38777878078144568e-17 ;
weighted_squared_targets_sum = -1.38777878078144568e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *86 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 77 ;
weights_sum = 0.531026861611698209 ;
targets_sum = 22 ;
weighted_targets_sum = 0.216933015980959626 ;
weighted_squared_targets_sum = 0.216933015980959626 ;
loss_function_factor = 2  )
 )
;
left_leave = *83  ;
right_node = *87 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *88 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 24 ;
weights_sum = 0.0479428765725944325 ;
targets_sum = 24 ;
weighted_targets_sum = 0.0479428765725944325 ;
weighted_squared_targets_sum = 0.0479428765725944325 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 4 ;
split_balance = 0 ;
split_feature_value = 0.0395302655963922223 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *89 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *90 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00144508670520231402 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00144508670520231402 ;
weighted_squared_targets_sum = 0.00144508670520231402 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *91 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 23 ;
weights_sum = 0.046497789867392135 ;
targets_sum = 23 ;
weighted_targets_sum = 0.046497789867392135 ;
weighted_squared_targets_sum = 0.046497789867392135 ;
loss_function_factor = 2  )
 )
;
right_leave = *88   )
;
left_leave = *80  ;
right_node = *92 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *93 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.279411764705883414 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = -1 ;
split_balance = 2147483647 ;
split_feature_value = 1.79769313486231571e+308 ;
after_split_error = 1.79769313486231571e+308 ;
missing_node = *0 ;
missing_leave = *94 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *95 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *96 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
right_leave = *93   )
;
left_leave = *77  ;
right_node = *97 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *98 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 97 ;
weights_sum = 0.140173410404624416 ;
targets_sum = 97 ;
weighted_targets_sum = 0.140173410404624416 ;
weighted_squared_targets_sum = 0.140173410404624416 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 1 ;
split_feature_value = 0.715222895179832507 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *99 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *100 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00144508670520231228 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00144508670520231228 ;
weighted_squared_targets_sum = 0.00144508670520231228 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *101 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 96 ;
weights_sum = 0.13872832369942209 ;
targets_sum = 96 ;
weighted_targets_sum = 0.13872832369942209 ;
weighted_squared_targets_sum = 0.13872832369942209 ;
loss_function_factor = 2  )
 )
;
right_leave = *98   )
;
priority_queue = *102 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 3 ;
nodes = 4 [ *82  *97  *87  *0 ]  )
;
first_leave = *74  ;
split_cols = 3 [ 1 1 2 ] ;
split_values = 3 [ 0.531511881898726335 0.530046165578986317 0.207390222439248872 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*103 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *104 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *105 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *106 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999999112 ;
targets_sum = 143 ;
weighted_targets_sum = 0.620115067303516065 ;
weighted_squared_targets_sum = 0.620115067303516065 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.471144741213342932 0 0.471144741213342932 ] ;
split_col = 3 ;
split_balance = 52 ;
split_feature_value = 0.685897385955671401 ;
after_split_error = 0.358804093433449267 ;
missing_node = *0 ;
missing_leave = *107 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *108 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *109 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 126 ;
weights_sum = 0.718608054507068772 ;
targets_sum = 72 ;
weighted_targets_sum = 0.55219468064688626 ;
weighted_squared_targets_sum = 0.55219468064688626 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.255751599937544039 0 0.255751599937544039 ] ;
split_col = 2 ;
split_balance = 62 ;
split_feature_value = 5.59499955390674319e-05 ;
after_split_error = 0.21938800334806241 ;
missing_node = *0 ;
missing_leave = *110 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *111 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *112 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 32 ;
weights_sum = 0.0295267042987408246 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.088465696311848363 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *113 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *114 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000922709509335650768 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *115 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 31 ;
weights_sum = 0.0286039947894051738 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *112  ;
right_node = *116 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *117 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 94 ;
weights_sum = 0.689081350208326171 ;
targets_sum = 72 ;
weighted_targets_sum = 0.552194680646884484 ;
weighted_squared_targets_sum = 0.552194680646884484 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.219388003348062632 0 0.219388003348062632 ] ;
split_col = 4 ;
split_balance = 34 ;
split_feature_value = 5.26800825184636778e-13 ;
after_split_error = 0.205540286541139705 ;
missing_node = *0 ;
missing_leave = *118 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *119 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000922709509335605665 ;
targets_sum = 0 ;
weighted_targets_sum = -9.71445146547011973e-17 ;
weighted_squared_targets_sum = -9.71445146547011973e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *120 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 93 ;
weights_sum = 0.688158640698992574 ;
targets_sum = 72 ;
weighted_targets_sum = 0.552194680646886593 ;
weighted_squared_targets_sum = 0.552194680646886593 ;
loss_function_factor = 2  )
 )
;
right_leave = *117   )
;
left_leave = *109  ;
right_node = *121 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *122 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 74 ;
weights_sum = 0.281391945492931617 ;
targets_sum = 71 ;
weighted_targets_sum = 0.0679203866566303327 ;
weighted_squared_targets_sum = 0.0679203866566303327 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.103052493495905007 0 0.103052493495905007 ] ;
split_col = 3 ;
split_balance = 54 ;
split_feature_value = 0.729013358245854448 ;
after_split_error = 0.0170267165996853057 ;
missing_node = *0 ;
missing_leave = *123 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *124 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *125 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 10 ;
weights_sum = 0.222338536895449967 ;
targets_sum = 7 ;
weighted_targets_sum = 0.00886697805914869221 ;
weighted_squared_targets_sum = 0.00886697805914869221 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0170267165996853195 0 0.0170267165996853195 ] ;
split_col = 4 ;
split_balance = 2 ;
split_feature_value = 0.999999999998233857 ;
after_split_error = 0.00655910265440538646 ;
missing_node = *0 ;
missing_leave = *126 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *127 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00333072100313478586 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0033307210031347876 ;
weighted_squared_targets_sum = 0.0033307210031347876 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *128 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 9 ;
weights_sum = 0.219007815892315189 ;
targets_sum = 6 ;
weighted_targets_sum = 0.00553625705601390461 ;
weighted_squared_targets_sum = 0.00553625705601390461 ;
loss_function_factor = 2  )
 )
;
left_leave = *125  ;
right_node = *129 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *130 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 64 ;
weights_sum = 0.0590534085974816492 ;
targets_sum = 64 ;
weighted_targets_sum = 0.0590534085974816492 ;
weighted_squared_targets_sum = 0.0590534085974816492 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.912877564103069084 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *131 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *132 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000922709509335650768 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000922709509335650768 ;
weighted_squared_targets_sum = 0.000922709509335650768 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *133 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 63 ;
weights_sum = 0.0581306990881459984 ;
targets_sum = 63 ;
weighted_targets_sum = 0.0581306990881459984 ;
weighted_squared_targets_sum = 0.0581306990881459984 ;
loss_function_factor = 2  )
 )
;
right_leave = *130   )
;
right_leave = *122   )
;
priority_queue = *134 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *116  *124  *111  *129  ]  )
;
first_leave = *106  ;
split_cols = 3 [ 3 3 2 ] ;
split_values = 3 [ 0.685897385955671401 0.729013358245854448 5.59499955390674319e-05 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*135 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *136 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *137 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *138 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999998113 ;
targets_sum = 143 ;
weighted_targets_sum = 0.388188071299955917 ;
weighted_squared_targets_sum = 0.388188071299955917 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.47499618520075193 0 0.47499618520075193 ] ;
split_col = 1 ;
split_balance = 6 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.420255978931199037 ;
missing_node = *0 ;
missing_leave = *139 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *140 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *141 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 103 ;
weights_sum = 0.931861594499045709 ;
targets_sum = 46 ;
weighted_targets_sum = 0.320049665799003458 ;
weighted_squared_targets_sum = 0.320049665799003458 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.420255978931199037 0 0.420255978931199037 ] ;
split_col = 4 ;
split_balance = 35 ;
split_feature_value = 5.26800825184636778e-13 ;
after_split_error = 0.359957974049163687 ;
missing_node = *0 ;
missing_leave = *142 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *143 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *144 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 69 ;
weights_sum = 0.608213401749990279 ;
targets_sum = 18 ;
weighted_targets_sum = 0.288696195727700777 ;
weighted_squared_targets_sum = 0.288696195727700777 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.303325778691394821 0 0.303325778691394821 ] ;
split_col = 4 ;
split_balance = 53 ;
split_feature_value = 2.22044604925031308e-16 ;
after_split_error = 0.244130964831055619 ;
missing_node = *0 ;
missing_leave = *145 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *146 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *147 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 61 ;
weights_sum = 0.477849528090813769 ;
targets_sum = 12 ;
weighted_targets_sum = 0.171758999966496545 ;
weighted_squared_targets_sum = 0.171758999966496545 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.220043339667620352 0 0.220043339667620352 ] ;
split_col = 3 ;
split_balance = 23 ;
split_feature_value = 0.360834998492078562 ;
after_split_error = 0.172300210882511851 ;
missing_node = *0 ;
missing_leave = *148 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *149 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00316530503489540968 ;
targets_sum = 0 ;
weighted_targets_sum = -1.71303943252709701e-17 ;
weighted_squared_targets_sum = -1.71303943252709701e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *150 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 60 ;
weights_sum = 0.474684223055918453 ;
targets_sum = 12 ;
weighted_targets_sum = 0.171758999966496545 ;
weighted_squared_targets_sum = 0.171758999966496545 ;
loss_function_factor = 2  )
 )
;
left_leave = *147  ;
right_node = *151 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *152 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 8 ;
weights_sum = 0.130363873659176677 ;
targets_sum = 6 ;
weighted_targets_sum = 0.116937195761204205 ;
weighted_squared_targets_sum = 0.116937195761204205 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0240876251634352945 0 0.0240876251634352945 ] ;
split_col = 3 ;
split_balance = 4 ;
split_feature_value = 0.675953685167010931 ;
after_split_error = 0.00718915029260175191 ;
missing_node = *0 ;
missing_leave = *153 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *154 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0198391156319297941 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0198391156319297941 ;
weighted_squared_targets_sum = 0.0198391156319297941 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *155 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.110524758027246886 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0970980801292744139 ;
weighted_squared_targets_sum = 0.0970980801292744139 ;
loss_function_factor = 2  )
 )
;
right_leave = *152   )
;
left_leave = *144  ;
right_node = *156 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *157 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 34 ;
weights_sum = 0.32364819274905543 ;
targets_sum = 28 ;
weighted_targets_sum = 0.0313534700713027983 ;
weighted_squared_targets_sum = 0.0313534700713027983 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0566321953577688594 0 0.0566321953577688594 ] ;
split_col = 1 ;
split_balance = 22 ;
split_feature_value = 0.429003557741430064 ;
after_split_error = 0.0429142711928514817 ;
missing_node = *0 ;
missing_leave = *158 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *159 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00316530503489537152 ;
targets_sum = 0 ;
weighted_targets_sum = -6.28837260041592572e-18 ;
weighted_squared_targets_sum = -6.28837260041592572e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *160 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 33 ;
weights_sum = 0.320482887714160003 ;
targets_sum = 28 ;
weighted_targets_sum = 0.0313534700713028053 ;
weighted_squared_targets_sum = 0.0313534700713028053 ;
loss_function_factor = 2  )
 )
;
right_leave = *157   )
;
left_leave = *141  ;
right_node = *161 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *162 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 97 ;
weights_sum = 0.0681384055009519318 ;
targets_sum = 97 ;
weighted_targets_sum = 0.0681384055009519318 ;
weighted_squared_targets_sum = 0.0681384055009519318 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 1 ;
split_feature_value = 0.715222895179832507 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *163 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *164 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000540072255951422981 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000540072255951422981 ;
weighted_squared_targets_sum = 0.000540072255951422981 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *165 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 96 ;
weights_sum = 0.0675983332450005719 ;
targets_sum = 96 ;
weighted_targets_sum = 0.0675983332450005719 ;
weighted_squared_targets_sum = 0.0675983332450005719 ;
loss_function_factor = 2  )
 )
;
right_leave = *162   )
;
priority_queue = *166 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *146  *151  *156  *161  ]  )
;
first_leave = *138  ;
split_cols = 3 [ 1 4 4 ] ;
split_values = 3 [ 0.531511881898726335 5.26800825184636778e-13 2.22044604925031308e-16 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*167 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *168 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *169 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *170 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999999778 ;
targets_sum = 143 ;
weighted_targets_sum = 0.58711124673282844 ;
weighted_squared_targets_sum = 0.58711124673282844 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.484823261385304405 0 0.484823261385304405 ] ;
split_col = 1 ;
split_balance = 98 ;
split_feature_value = 0.370269696184077013 ;
after_split_error = 0.417855418629112019 ;
missing_node = *0 ;
missing_leave = *171 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *172 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *173 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 51 ;
weights_sum = 0.389073469268640726 ;
targets_sum = 11 ;
weighted_targets_sum = 0.317642474223453875 ;
weighted_squared_targets_sum = 0.317642474223453875 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.116633591311414597 0 0.116633591311414597 ] ;
split_col = 3 ;
split_balance = 17 ;
split_feature_value = 0.379758326487598441 ;
after_split_error = 0.0817399725429753532 ;
missing_node = *0 ;
missing_leave = *174 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *175 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00202007862074767616 ;
targets_sum = 0 ;
weighted_targets_sum = -1.99493199737332816e-17 ;
weighted_squared_targets_sum = -1.99493199737332816e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *176 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 50 ;
weights_sum = 0.387053390647893014 ;
targets_sum = 11 ;
weighted_targets_sum = 0.317642474223453875 ;
weighted_squared_targets_sum = 0.317642474223453875 ;
loss_function_factor = 2  )
 )
;
left_leave = *173  ;
right_node = *177 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *178 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 149 ;
weights_sum = 0.610926530731358608 ;
targets_sum = 132 ;
weighted_targets_sum = 0.269468772509374177 ;
weighted_squared_targets_sum = 0.269468772509374177 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.301221827317697977 0 0.301221827317697977 ] ;
split_col = 1 ;
split_balance = 137 ;
split_feature_value = 0.384853138944362905 ;
after_split_error = 0.26619311422357661 ;
missing_node = *0 ;
missing_leave = *179 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *180 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *181 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0798170787980364282 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000344670862959180939 ;
weighted_squared_targets_sum = 0.000344670862959180939 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.000686364969425591089 0 0.000686364969425591089 ] ;
split_col = 4 ;
split_balance = 4 ;
split_feature_value = 8.62643290133746632e-14 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *182 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *183 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000344670862959175085 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *184 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 5 ;
weights_sum = 0.0794724079350772467 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000344670862959180939 ;
weighted_squared_targets_sum = 0.000344670862959180939 ;
loss_function_factor = 2  )
 )
;
left_leave = *181  ;
right_node = *185 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *186 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 143 ;
weights_sum = 0.531109451933322152 ;
targets_sum = 131 ;
weighted_targets_sum = 0.269124101646414926 ;
weighted_squared_targets_sum = 0.269124101646414926 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.265506749254151686 0 0.265506749254151686 ] ;
split_col = 1 ;
split_balance = 139 ;
split_feature_value = 0.387128434225619933 ;
after_split_error = 0.211625644627081194 ;
missing_node = *0 ;
missing_leave = *187 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *188 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *189 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 2 ;
weights_sum = 0.0916190712905839699 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0916190712905839699 ;
weighted_squared_targets_sum = 0.0916190712905839699 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.307088750247426767 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *190 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *191 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.045809535645291985 ;
targets_sum = 1 ;
weighted_targets_sum = 0.045809535645291985 ;
weighted_squared_targets_sum = 0.045809535645291985 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *192 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.045809535645291985 ;
targets_sum = 1 ;
weighted_targets_sum = 0.045809535645291985 ;
weighted_squared_targets_sum = 0.045809535645291985 ;
loss_function_factor = 2  )
 )
;
left_leave = *189  ;
right_node = *193 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *194 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 141 ;
weights_sum = 0.439490380642737988 ;
targets_sum = 129 ;
weighted_targets_sum = 0.177505030355829679 ;
weighted_squared_targets_sum = 0.177505030355829679 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.211625644627081055 0 0.211625644627081055 ] ;
split_col = 2 ;
split_balance = 27 ;
split_feature_value = 0.96944116901060462 ;
after_split_error = 0.173303874638066624 ;
missing_node = *0 ;
missing_leave = *195 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *196 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0383814937942055859 ;
targets_sum = 0 ;
weighted_targets_sum = -2.08166817117216851e-17 ;
weighted_squared_targets_sum = -2.08166817117216851e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *197 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 140 ;
weights_sum = 0.401108886848531354 ;
targets_sum = 129 ;
weighted_targets_sum = 0.177505030355830928 ;
weighted_squared_targets_sum = 0.177505030355830928 ;
loss_function_factor = 2  )
 )
;
right_leave = *194   )
;
right_leave = *186   )
;
right_leave = *178   )
;
priority_queue = *198 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *193  *172  *188  *180  ]  )
;
first_leave = *170  ;
split_cols = 3 [ 1 1 1 ] ;
split_values = 3 [ 0.370269696184077013 0.384853138944362905 0.387128434225619933 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*199 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *200 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *201 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *202 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999996114 ;
targets_sum = 143 ;
weighted_targets_sum = 0.629305386150195267 ;
weighted_squared_targets_sum = 0.629305386150195267 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.466560234225094739 0 0.466560234225094739 ] ;
split_col = 2 ;
split_balance = 102 ;
split_feature_value = 0.000528285193333644099 ;
after_split_error = 0.411043969618775706 ;
missing_node = *0 ;
missing_leave = *203 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *204 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *205 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 49 ;
weights_sum = 0.292780721380140052 ;
targets_sum = 3 ;
weighted_targets_sum = 0.108435533463665898 ;
weighted_squared_targets_sum = 0.108435533463665898 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.136549761192975516 0 0.136549761192975516 ] ;
split_col = 0 ;
split_balance = 43 ;
split_feature_value = 0.176199208821572029 ;
after_split_error = 0.0942057438390707658 ;
missing_node = *0 ;
missing_leave = *206 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *207 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *208 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 3 ;
weights_sum = 0.0487973376442767809 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0474146759776301538 ;
weighted_squared_targets_sum = 0.0474146759776301538 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.00268696851408774251 0 0.00268696851408774251 ] ;
split_col = 4 ;
split_balance = 1 ;
split_feature_value = 1.41553435639707459e-14 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *209 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *210 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000691330833323314958 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *211 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 2 ;
weights_sum = 0.0481060068109534639 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0474146759776301538 ;
weighted_squared_targets_sum = 0.0474146759776301538 ;
loss_function_factor = 2  )
 )
;
left_leave = *208  ;
right_node = *212 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *213 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 46 ;
weights_sum = 0.243983383735863368 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0610208574860357442 ;
weighted_squared_targets_sum = 0.0610208574860357442 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0915187753249830788 0 0.0915187753249830788 ] ;
split_col = 3 ;
split_balance = 38 ;
split_feature_value = 0.429778803348615179 ;
after_split_error = 0.0691576696932000023 ;
missing_node = *0 ;
missing_leave = *214 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *215 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000691330833323316259 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *216 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 45 ;
weights_sum = 0.243292052902540079 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0610208574860357442 ;
weighted_squared_targets_sum = 0.0610208574860357442 ;
loss_function_factor = 2  )
 )
;
right_leave = *213   )
;
left_leave = *205  ;
right_node = *217 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *218 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 151 ;
weights_sum = 0.707219278619855785 ;
targets_sum = 140 ;
weighted_targets_sum = 0.520869852686528523 ;
weighted_squared_targets_sum = 0.520869852686528523 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.274494208425800079 0 0.274494208425800079 ] ;
split_col = 0 ;
split_balance = 29 ;
split_feature_value = 0.463905694672786861 ;
after_split_error = 0.243132135257500215 ;
missing_node = *0 ;
missing_leave = *219 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *220 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *221 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 61 ;
weights_sum = 0.186240969298665071 ;
targets_sum = 59 ;
weighted_targets_sum = 0.183550111862743892 ;
weighted_squared_targets_sum = 0.183550111862743892 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.00530395847089876193 0 0.00530395847089876193 ] ;
split_col = 2 ;
split_balance = 53 ;
split_feature_value = 0.00123333066520273094 ;
after_split_error = 0.00499154125417236583 ;
missing_node = *0 ;
missing_leave = *222 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *223 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0305104287430178409 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0305104287430178478 ;
weighted_squared_targets_sum = 0.0305104287430178478 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *224 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 60 ;
weights_sum = 0.15573054055564714 ;
targets_sum = 58 ;
weighted_targets_sum = 0.153039683119725933 ;
weighted_squared_targets_sum = 0.153039683119725933 ;
loss_function_factor = 2  )
 )
;
left_leave = *221  ;
right_node = *225 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *226 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 90 ;
weights_sum = 0.520978309321192157 ;
targets_sum = 81 ;
weighted_targets_sum = 0.337319740823786074 ;
weighted_squared_targets_sum = 0.337319740823786074 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.237828176786601342 0 0.237828176786601342 ] ;
split_col = 1 ;
split_balance = 66 ;
split_feature_value = 0.370088477642079638 ;
after_split_error = 0.210976697344030684 ;
missing_node = *0 ;
missing_leave = *227 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *228 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00405181518469544758 ;
targets_sum = 0 ;
weighted_targets_sum = -3.40439482160448392e-17 ;
weighted_squared_targets_sum = -3.40439482160448392e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *229 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 89 ;
weights_sum = 0.516926494136497161 ;
targets_sum = 81 ;
weighted_targets_sum = 0.337319740823786685 ;
weighted_squared_targets_sum = 0.337319740823786685 ;
loss_function_factor = 2  )
 )
;
right_leave = *226   )
;
right_leave = *218   )
;
priority_queue = *230 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *225  *212  *220  *207  ]  )
;
first_leave = *202  ;
split_cols = 3 [ 2 0 0 ] ;
split_values = 3 [ 0.000528285193333644099 0.176199208821572029 0.463905694672786861 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*231 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *232 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *233 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *234 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999999778 ;
targets_sum = 143 ;
weighted_targets_sum = 0.5008809963217008 ;
weighted_squared_targets_sum = 0.5008809963217008 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.499998447690962133 0 0.499998447690962133 ] ;
split_col = 0 ;
split_balance = 20 ;
split_feature_value = 0.441781515973124872 ;
after_split_error = 0.4387891171211033 ;
missing_node = *0 ;
missing_leave = *235 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *236 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *237 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 90 ;
weights_sum = 0.272068498653787016 ;
targets_sum = 59 ;
weighted_targets_sum = 0.21412745187236959 ;
weighted_squared_targets_sum = 0.21412745187236959 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0912032724663986438 0 0.0912032724663986438 ] ;
split_col = 3 ;
split_balance = 10 ;
split_feature_value = 0.1320001318823463 ;
after_split_error = 0.0588319084659889788 ;
missing_node = *0 ;
missing_leave = *238 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *239 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000460122158750065052 ;
targets_sum = 0 ;
weighted_targets_sum = -3.46944695195361419e-18 ;
weighted_squared_targets_sum = -3.46944695195361419e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *240 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 89 ;
weights_sum = 0.271608376495036774 ;
targets_sum = 59 ;
weighted_targets_sum = 0.214127451872369506 ;
weighted_squared_targets_sum = 0.214127451872369506 ;
loss_function_factor = 2  )
 )
;
left_leave = *237  ;
right_node = *241 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *242 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 110 ;
weights_sum = 0.727931501346212873 ;
targets_sum = 84 ;
weighted_targets_sum = 0.286753544449331044 ;
weighted_squared_targets_sum = 0.286753544449331044 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.347585844654703879 0 0.347585844654703879 ] ;
split_col = 1 ;
split_balance = 56 ;
split_feature_value = 0.332158208341527428 ;
after_split_error = 0.302374292810142387 ;
missing_node = *0 ;
missing_leave = *243 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *244 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *245 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 27 ;
weights_sum = 0.199072132905354138 ;
targets_sum = 8 ;
weighted_targets_sum = 0.135599770894035354 ;
weighted_squared_targets_sum = 0.135599770894035354 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0864695386664701138 0 0.0864695386664701138 ] ;
split_col = 1 ;
split_balance = 9 ;
split_feature_value = 0.272330343687464782 ;
after_split_error = 0.0454699356707378433 ;
missing_node = *0 ;
missing_leave = *246 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *247 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00814425570578567772 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *248 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 26 ;
weights_sum = 0.190927877199568524 ;
targets_sum = 8 ;
weighted_targets_sum = 0.135599770894035326 ;
weighted_squared_targets_sum = 0.135599770894035326 ;
loss_function_factor = 2  )
 )
;
left_leave = *245  ;
right_node = *249 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *250 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 83 ;
weights_sum = 0.528859368440858457 ;
targets_sum = 76 ;
weighted_targets_sum = 0.151153773555296023 ;
weighted_squared_targets_sum = 0.151153773555296023 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.215904754143672328 0 0.215904754143672328 ] ;
split_col = 2 ;
split_balance = 37 ;
split_feature_value = 0.971644395191448185 ;
after_split_error = 0.158529236007423413 ;
missing_node = *0 ;
missing_leave = *251 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *252 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *253 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 23 ;
weights_sum = 0.478022548707630446 ;
targets_sum = 16 ;
weighted_targets_sum = 0.100316953822065513 ;
weighted_squared_targets_sum = 0.100316953822065513 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.158529236007423413 0 0.158529236007423413 ] ;
split_col = 1 ;
split_balance = 3 ;
split_feature_value = 0.429987773183261757 ;
after_split_error = 0.144586261367377789 ;
missing_node = *0 ;
missing_leave = *254 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *255 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0512377972104179208 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *256 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 22 ;
weights_sum = 0.426784751497212567 ;
targets_sum = 16 ;
weighted_targets_sum = 0.100316953822065499 ;
weighted_squared_targets_sum = 0.100316953822065499 ;
loss_function_factor = 2  )
 )
;
left_leave = *253  ;
right_node = *257 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *258 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 60 ;
weights_sum = 0.0508368197332301694 ;
targets_sum = 60 ;
weighted_targets_sum = 0.0508368197332301694 ;
weighted_squared_targets_sum = 0.0508368197332301694 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.901066733516976193 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *259 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *260 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00166476917446302408 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00166476917446302408 ;
weighted_squared_targets_sum = 0.00166476917446302408 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *261 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 59 ;
weights_sum = 0.0491720505587671525 ;
targets_sum = 59 ;
weighted_targets_sum = 0.0491720505587671525 ;
weighted_squared_targets_sum = 0.0491720505587671525 ;
loss_function_factor = 2  )
 )
;
right_leave = *258   )
;
right_leave = *250   )
;
right_leave = *242   )
;
priority_queue = *262 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *244  *236  *252  *257  ]  )
;
first_leave = *234  ;
split_cols = 3 [ 0 1 2 ] ;
split_values = 3 [ 0.441781515973124872 0.332158208341527428 0.971644395191448185 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*263 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *264 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *265 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *266 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000067 ;
targets_sum = 143 ;
weighted_targets_sum = 0.48355655532398456 ;
weighted_squared_targets_sum = 0.48355655532398456 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.499459226254373945 0 0.499459226254373945 ] ;
split_col = 1 ;
split_balance = 136 ;
split_feature_value = 0.272330343687464782 ;
after_split_error = 0.441602821067810181 ;
missing_node = *0 ;
missing_leave = *267 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *268 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *269 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 32 ;
weights_sum = 0.138506311028580187 ;
targets_sum = 3 ;
weighted_targets_sum = 0.00822378328030563301 ;
weighted_squared_targets_sum = 0.00822378328030563301 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0154709957323335683 0 0.0154709957323335683 ] ;
split_col = 3 ;
split_balance = 26 ;
split_feature_value = 0.700873003833307751 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *270 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *271 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00103757138473049566 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *272 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 31 ;
weights_sum = 0.137468739643849619 ;
targets_sum = 3 ;
weighted_targets_sum = 0.00822378328030563301 ;
weighted_squared_targets_sum = 0.00822378328030563301 ;
loss_function_factor = 2  )
 )
;
left_leave = *269  ;
right_node = *273 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *274 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 168 ;
weights_sum = 0.861493688971420868 ;
targets_sum = 140 ;
weighted_targets_sum = 0.475332772043679297 ;
weighted_squared_targets_sum = 0.475332772043679297 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.426131825335476444 0 0.426131825335476444 ] ;
split_col = 3 ;
split_balance = 110 ;
split_feature_value = 0.1320001318823463 ;
after_split_error = 0.391676956726106418 ;
missing_node = *0 ;
missing_leave = *275 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *276 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *277 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 29 ;
weights_sum = 0.136791871263686748 ;
targets_sum = 13 ;
weighted_targets_sum = 0.0309515017211229419 ;
weighted_squared_targets_sum = 0.0309515017211229419 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0478963895997318451 0 0.0478963895997318451 ] ;
split_col = 0 ;
split_balance = 19 ;
split_feature_value = 0.176199208821572029 ;
after_split_error = 0.017426739380946122 ;
missing_node = *0 ;
missing_leave = *278 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *279 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00103757138473049154 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *280 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 28 ;
weights_sum = 0.135754299878956319 ;
targets_sum = 13 ;
weighted_targets_sum = 0.0309515017211229385 ;
weighted_squared_targets_sum = 0.0309515017211229385 ;
loss_function_factor = 2  )
 )
;
left_leave = *277  ;
right_node = *281 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *282 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 139 ;
weights_sum = 0.724701817707733786 ;
targets_sum = 127 ;
weighted_targets_sum = 0.444381270322556088 ;
weighted_squared_targets_sum = 0.444381270322556088 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.343780567126374281 0 0.343780567126374281 ] ;
split_col = 0 ;
split_balance = 17 ;
split_feature_value = 0.59777085177647038 ;
after_split_error = 0.31078862576163474 ;
missing_node = *0 ;
missing_leave = *283 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *284 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *285 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 78 ;
weights_sum = 0.518544265715617958 ;
targets_sum = 70 ;
weighted_targets_sum = 0.367296075830272795 ;
weighted_squared_targets_sum = 0.367296075830272795 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.214264703302247117 0 0.214264703302247117 ] ;
split_col = 0 ;
split_balance = 56 ;
split_feature_value = 0.548110156284199013 ;
after_split_error = 0.180073536407568624 ;
missing_node = *0 ;
missing_leave = *286 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *287 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0130459421710816051 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0130459421710815635 ;
weighted_squared_targets_sum = 0.0130459421710815635 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *288 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 77 ;
weights_sum = 0.505498323544536388 ;
targets_sum = 69 ;
weighted_targets_sum = 0.354250133659191224 ;
weighted_squared_targets_sum = 0.354250133659191224 ;
loss_function_factor = 2  )
 )
;
left_leave = *285  ;
right_node = *289 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *290 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 61 ;
weights_sum = 0.206157551992115801 ;
targets_sum = 57 ;
weighted_targets_sum = 0.0770851944922828491 ;
weighted_squared_targets_sum = 0.0770851944922828491 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0965239224593876788 0 0.0965239224593876788 ] ;
split_col = 3 ;
split_balance = 47 ;
split_feature_value = 0.734861316589340507 ;
after_split_error = 0.0596029356202125576 ;
missing_node = *0 ;
missing_leave = *291 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *292 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0183652243421758739 ;
targets_sum = 0 ;
weighted_targets_sum = 6.5052130349130266e-19 ;
weighted_squared_targets_sum = 6.5052130349130266e-19 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *293 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 60 ;
weights_sum = 0.187792327649939778 ;
targets_sum = 57 ;
weighted_targets_sum = 0.0770851944922828491 ;
weighted_squared_targets_sum = 0.0770851944922828491 ;
loss_function_factor = 2  )
 )
;
right_leave = *290   )
;
right_leave = *282   )
;
right_leave = *274   )
;
priority_queue = *294 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *289  *284  *276  *268  ]  )
;
first_leave = *266  ;
split_cols = 3 [ 1 3 0 ] ;
split_values = 3 [ 0.272330343687464782 0.1320001318823463 0.59777085177647038 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*295 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *296 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *297 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *298 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999999223 ;
targets_sum = 143 ;
weighted_targets_sum = 0.468019277192740835 ;
weighted_squared_targets_sum = 0.468019277192740835 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.497954466737450141 0 0.497954466737450141 ] ;
split_col = 3 ;
split_balance = 72 ;
split_feature_value = 0.729013358245854448 ;
after_split_error = 0.452327897424011416 ;
missing_node = *0 ;
missing_leave = *299 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *300 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *301 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 136 ;
weights_sum = 0.925402114634777728 ;
targets_sum = 79 ;
weighted_targets_sum = 0.39342139182752045 ;
weighted_squared_targets_sum = 0.39342139182752045 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.452327897424011416 0 0.452327897424011416 ] ;
split_col = 0 ;
split_balance = 122 ;
split_feature_value = 0.176199208821572029 ;
after_split_error = 0.430982516459485931 ;
missing_node = *0 ;
missing_leave = *302 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *303 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *304 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.0443821012400811982 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0401042069557288258 ;
weighted_squared_targets_sum = 0.0401042069557288258 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.00773111470258469602 0 0.00773111470258469602 ] ;
split_col = 4 ;
split_balance = 3 ;
split_feature_value = 1.41553435639707459e-14 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *305 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *306 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00213894714217618617 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *307 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0422431540979050085 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0401042069557288258 ;
weighted_squared_targets_sum = 0.0401042069557288258 ;
loss_function_factor = 2  )
 )
;
left_leave = *304  ;
right_node = *308 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *309 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 129 ;
weights_sum = 0.881020013394697377 ;
targets_sum = 74 ;
weighted_targets_sum = 0.353317184871791368 ;
weighted_squared_targets_sum = 0.353317184871791368 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.423251401756901291 0 0.423251401756901291 ] ;
split_col = 2 ;
split_balance = 45 ;
split_feature_value = 0.000276121091179526434 ;
after_split_error = 0.38776620905643866 ;
missing_node = *0 ;
missing_leave = *310 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *311 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *312 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 42 ;
weights_sum = 0.0980441724909268952 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.107157403318795141 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *313 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *314 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000708248235409786038 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *315 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 41 ;
weights_sum = 0.0973359242555170978 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *312  ;
right_node = *316 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *317 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 87 ;
weights_sum = 0.782975840903769482 ;
targets_sum = 74 ;
weighted_targets_sum = 0.353317184871791201 ;
weighted_squared_targets_sum = 0.353317184871791201 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.387766209056438271 0 0.387766209056438271 ] ;
split_col = 2 ;
split_balance = 21 ;
split_feature_value = 0.09124051799518762 ;
after_split_error = 0.364099940337007988 ;
missing_node = *0 ;
missing_leave = *318 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *319 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0125361376813889237 ;
targets_sum = 0 ;
weighted_targets_sum = -2.25514051876984922e-17 ;
weighted_squared_targets_sum = -2.25514051876984922e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *320 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 86 ;
weights_sum = 0.770439703222381311 ;
targets_sum = 74 ;
weighted_targets_sum = 0.353317184871791479 ;
weighted_squared_targets_sum = 0.353317184871791479 ;
loss_function_factor = 2  )
 )
;
right_leave = *317   )
;
right_leave = *309   )
;
left_leave = *301  ;
right_node = *321 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *322 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 64 ;
weights_sum = 0.0745978853652202734 ;
targets_sum = 64 ;
weighted_targets_sum = 0.0745978853652202734 ;
weighted_squared_targets_sum = 0.0745978853652202734 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.912877564103069084 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *323 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *324 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000663799852083516665 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000663799852083516665 ;
weighted_squared_targets_sum = 0.000663799852083516665 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *325 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 63 ;
weights_sum = 0.073934085513136738 ;
targets_sum = 63 ;
weighted_targets_sum = 0.073934085513136738 ;
weighted_squared_targets_sum = 0.073934085513136738 ;
loss_function_factor = 2  )
 )
;
right_leave = *322   )
;
priority_queue = *326 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *316  *303  *311  *321  ]  )
;
first_leave = *298  ;
split_cols = 3 [ 3 0 2 ] ;
split_values = 3 [ 0.729013358245854448 0.176199208821572029 0.000276121091179526434 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*327 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *328 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *329 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *330 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.99999999999999778 ;
targets_sum = 143 ;
weighted_targets_sum = 0.583294061806513442 ;
weighted_squared_targets_sum = 0.583294061806513442 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.486124198535543894 0 0.486124198535543894 ] ;
split_col = 0 ;
split_balance = 34 ;
split_feature_value = 0.556206773297698298 ;
after_split_error = 0.456703256187367457 ;
missing_node = *0 ;
missing_leave = *331 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *332 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *333 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 117 ;
weights_sum = 0.563200197084261611 ;
targets_sum = 73 ;
weighted_targets_sum = 0.268354366925050547 ;
weighted_squared_targets_sum = 0.268354366925050547 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.280977053994277137 0 0.280977053994277137 ] ;
split_col = 1 ;
split_balance = 61 ;
split_feature_value = 0.342206108309510149 ;
after_split_error = 0.233696696643850843 ;
missing_node = *0 ;
missing_leave = *334 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *335 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *336 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 28 ;
weights_sum = 0.0878787087915239573 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.113038628061597313 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *337 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *338 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000551247517281962642 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *339 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 27 ;
weights_sum = 0.0873274612742419715 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *336  ;
right_node = *340 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *341 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 89 ;
weights_sum = 0.475321488292738348 ;
targets_sum = 73 ;
weighted_targets_sum = 0.268354366925050991 ;
weighted_squared_targets_sum = 0.268354366925050991 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.23369669664385101 0 0.23369669664385101 ] ;
split_col = 3 ;
split_balance = 31 ;
split_feature_value = 0.429657342218349281 ;
after_split_error = 0.19590829899505241 ;
missing_node = *0 ;
missing_leave = *342 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *343 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *344 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 60 ;
weights_sum = 0.350512323495811906 ;
targets_sum = 46 ;
weighted_targets_sum = 0.239591198964361374 ;
weighted_squared_targets_sum = 0.239591198964361374 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.151639320135247724 0 0.151639320135247724 ] ;
split_col = 3 ;
split_balance = 36 ;
split_feature_value = 0.32100875926977368 ;
after_split_error = 0.125773950295607173 ;
missing_node = *0 ;
missing_leave = *345 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *346 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000551247517281989313 ;
targets_sum = 0 ;
weighted_targets_sum = -1.21430643318376497e-17 ;
weighted_squared_targets_sum = -1.21430643318376497e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *347 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 59 ;
weights_sum = 0.349961075978529823 ;
targets_sum = 46 ;
weighted_targets_sum = 0.239591198964361429 ;
weighted_squared_targets_sum = 0.239591198964361429 ;
loss_function_factor = 2  )
 )
;
left_leave = *344  ;
right_node = *348 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *349 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 29 ;
weights_sum = 0.124809164796925928 ;
targets_sum = 27 ;
weighted_targets_sum = 0.0287631679606891143 ;
weighted_squared_targets_sum = 0.0287631679606891143 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0442689788598046585 0 0.0442689788598046585 ] ;
split_col = 4 ;
split_balance = 25 ;
split_feature_value = 0.000988084490728707854 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *350 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *351 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0480229984181184538 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *352 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 28 ;
weights_sum = 0.0767861663788075716 ;
targets_sum = 27 ;
weighted_targets_sum = 0.0287631679606891177 ;
weighted_squared_targets_sum = 0.0287631679606891177 ;
loss_function_factor = 2  )
 )
;
right_leave = *349   )
;
right_leave = *341   )
;
left_leave = *333  ;
right_node = *353 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *354 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 83 ;
weights_sum = 0.436799802915736723 ;
targets_sum = 70 ;
weighted_targets_sum = 0.314939694881462673 ;
weighted_squared_targets_sum = 0.314939694881462673 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.175726202193090209 0 0.175726202193090209 ] ;
split_col = 1 ;
split_balance = 59 ;
split_feature_value = 0.272330343687464782 ;
after_split_error = 0.141013965640128303 ;
missing_node = *0 ;
missing_leave = *355 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *356 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00975719306829215052 ;
targets_sum = 0 ;
weighted_targets_sum = 9.21571846612678769e-18 ;
weighted_squared_targets_sum = 9.21571846612678769e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *357 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 82 ;
weights_sum = 0.427042609847444965 ;
targets_sum = 70 ;
weighted_targets_sum = 0.314939694881463006 ;
weighted_squared_targets_sum = 0.314939694881463006 ;
loss_function_factor = 2  )
 )
;
right_leave = *354   )
;
priority_queue = *358 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *348  *353  *343  *335  ]  )
;
first_leave = *330  ;
split_cols = 3 [ 0 1 3 ] ;
split_values = 3 [ 0.556206773297698298 0.342206108309510149 0.429657342218349281 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*359 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *360 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *361 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *362 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000022 ;
targets_sum = 143 ;
weighted_targets_sum = 0.43045380638063907 ;
weighted_squared_targets_sum = 0.43045380638063907 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.490326653906116794 0 0.490326653906116794 ] ;
split_col = 2 ;
split_balance = 72 ;
split_feature_value = 0.00468965205373939042 ;
after_split_error = 0.451357995059023742 ;
missing_node = *0 ;
missing_leave = *363 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *364 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *365 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 64 ;
weights_sum = 0.56695653307663807 ;
targets_sum = 12 ;
weighted_targets_sum = 0.174884078978449986 ;
weighted_squared_targets_sum = 0.174884078978449986 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.241878260598555217 0 0.241878260598555217 ] ;
split_col = 2 ;
split_balance = 60 ;
split_feature_value = 0.00298229498924867942 ;
after_split_error = 0.202259529121453174 ;
missing_node = *0 ;
missing_leave = *366 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *367 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *368 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 62 ;
weights_sum = 0.414680026810623992 ;
targets_sum = 12 ;
weighted_targets_sum = 0.174884078978449986 ;
weighted_squared_targets_sum = 0.174884078978449986 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.202259529121453174 0 0.202259529121453174 ] ;
split_col = 2 ;
split_balance = 50 ;
split_feature_value = 0.00124141380660278133 ;
after_split_error = 0.139174612029951961 ;
missing_node = *0 ;
missing_leave = *369 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *370 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.018653033765306741 ;
targets_sum = 0 ;
weighted_targets_sum = -1.38777878078144568e-17 ;
weighted_squared_targets_sum = -1.38777878078144568e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *371 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 61 ;
weights_sum = 0.396026993045317244 ;
targets_sum = 12 ;
weighted_targets_sum = 0.174884078978449986 ;
weighted_squared_targets_sum = 0.174884078978449986 ;
loss_function_factor = 2  )
 )
;
left_leave = *368  ;
right_node = *372 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *373 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 2 ;
weights_sum = 0.152276506266014106 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.503622972889967047 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *374 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *375 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0604699175539979983 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *376 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0918065887120161073 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
right_leave = *373   )
;
left_leave = *365  ;
right_node = *377 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *378 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 136 ;
weights_sum = 0.433043466923362541 ;
targets_sum = 131 ;
weighted_targets_sum = 0.25556972740218914 ;
weighted_squared_targets_sum = 0.25556972740218914 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.209479734460468858 0 0.209479734460468858 ] ;
split_col = 0 ;
split_balance = 20 ;
split_feature_value = 0.498163758700666093 ;
after_split_error = 0.163975871224280589 ;
missing_node = *0 ;
missing_leave = *379 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *380 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *381 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 58 ;
weights_sum = 0.103183666511191624 ;
targets_sum = 58 ;
weighted_targets_sum = 0.103183666511191624 ;
weighted_squared_targets_sum = 0.103183666511191624 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.341824886709230169 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *382 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *383 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0295918401082008453 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0295918401082008453 ;
weighted_squared_targets_sum = 0.0295918401082008453 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *384 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 57 ;
weights_sum = 0.0735918264029907648 ;
targets_sum = 57 ;
weighted_targets_sum = 0.0735918264029907648 ;
weighted_squared_targets_sum = 0.0735918264029907648 ;
loss_function_factor = 2  )
 )
;
left_leave = *381  ;
right_node = *385 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *386 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 78 ;
weights_sum = 0.329859800412171167 ;
targets_sum = 73 ;
weighted_targets_sum = 0.152386060890997432 ;
weighted_squared_targets_sum = 0.152386060890997432 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.16397587122428095 0 0.16397587122428095 ] ;
split_col = 3 ;
split_balance = 74 ;
split_feature_value = 0.502522189560202448 ;
after_split_error = 0.129401693962108599 ;
missing_node = *0 ;
missing_leave = *387 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *388 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000349819418088731515 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000349819418088741924 ;
weighted_squared_targets_sum = 0.000349819418088741924 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *389 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 77 ;
weights_sum = 0.329509980994081686 ;
targets_sum = 72 ;
weighted_targets_sum = 0.152036241472908812 ;
weighted_squared_targets_sum = 0.152036241472908812 ;
loss_function_factor = 2  )
 )
;
right_leave = *386   )
;
right_leave = *378   )
;
priority_queue = *390 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *367  *380  *385  *372  ]  )
;
first_leave = *362  ;
split_cols = 3 [ 2 0 2 ] ;
split_values = 3 [ 0.00468965205373939042 0.498163758700666093 0.00298229498924867942 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
] ;
voting_weights = 12 [ 1.47221948958322013 1.16003912522078267 0.641814808237945456 0.884150884771987666 0.642974871060007169 0.551226131392252627 0.552637175041885365 0.627805490448808512 0.503649765393419879 0.292908770120374085 0.518978458401263443 0.360278953433196047 ] ;
sum_voting_weights = 8.20868392310514317 ;
initial_sum_weights = 200 ;
example_weights = 200 [ 0.0107210847922966195 0.000444852046205364597 0.000400878651114653479 0.000444852046205364597 0.000783250216693656275 0.000400878651114653479 0.000444852046205364597 0.0155121670150422022 0.000141982221496269483 0.00156142278670138657 0.000277409648641513277 0.000534450558532895722 0.000444852046205364597 0.000444852046205364597 0.0183768887024829339 0.000444852046205364597 0.00152431698991743725 0.000444852046205364597 0.000444852046205364597 0.0342152206303120571 0.000444852046205364597 0.000291855774090214878 0.000444852046205364597 0.000444852046205364597 0.000458701252646065362 0.000444852046205364597 0.00564938782923639967 0.000141982221496269483 0.0126053372449833178 0.00150505870040525342 0.000444852046205364597 0.00160952034070969323 0.00160952034070969323 0.000277409648641513277 0.00445194603151248623 0.000444852046205364597 0.000141982221496269483 0.000141982221496269483 0.0128804392476061045 0.000277409648641513277 0.000444852046205364597 0.0289620228084313154 0.000216411965650798458 0.000277409648641513277 0.0249194539764500851 0.000277409648641513277 0.000277409648641513277 0.00160952034070969323 0.000458701252646065362 0.000277409648641513277 0.00171053510157377414 0.0352691750340703991 0.000444852046205364597 0.00370641536237075473 0.000223149338253895665 0.000444852046205364597 0.000141982221496269483 0.000141982221496269483 0.00234950638321515873 0.00026008277447326782 0.00026008277447326782 0.000388775237040830544 0.0219938506241258089 0.00162586792396260242 0.00445194603151248623 0.000141982221496269483 0.000444852046205364597 0.0203124271385637344 0.000277409648641513277 0.000277409648641513277 0.00160952034070969323 0.000277409648641513277 0.000141982221496269483 0.0104372732594916959 0.000783250216693656275 0.0128804392476061045 0.000444852046205364597 0.000400878651114653479 0.00185433460581665185 0.000513706243382991445 0.00482959765650080395 0.00460351795648042232 0.00185433460581665185 0.00185433460581665185 0.000400878651114653479 0.000458701252646065362 0.000400878651114653479 0.000277409648641513277 0.0107210847922966195 0.000141982221496269483 0.000277409648641513277 0.000783250216693656275 0.000223149338253895665 0.000783250216693656275 0.000534450558532895722 0.000277409648641513277 0.000444852046205364597 0.000444852046205364597 0.00564938782923639967 0.000444852046205364597 0.024098975020124206 0.00160952034070969323 0.0153835192099978247 0.000400878651114653479 0.000141982221496269483 0.00370641536237075473 0.000388775237040830544 0.000444852046205364597 0.000444852046205364597 0.000277409648641513277 0.000141982221496269483 0.0388996079922467736 0.0138636879903672253 0.000444852046205364597 0.000444852046205364597 0.000444852046205364597 0.000444852046205364597 0.00370641536237075473 0.000141982221496269483 0.000388775237040830544 0.000444852046205364597 0.000444852046205364597 0.000444852046205364597 0.00185433460581665185 0.000141982221496269483 0.000216411965650798458 0.0377182269229495437 0.00507753272439342464 0.000141982221496269483 0.000141982221496269483 0.00160952034070969323 0.00160952034070969323 0.000444852046205364597 0.000400878651114653479 0.000759602158435389329 0.000400878651114653479 0.00160952034070969323 0.00234950638321515873 0.000141982221496269483 0.000141982221496269483 0.000277409648641513277 0.000400878651114653479 0.000277409648641513277 0.000400878651114653479 0.00160952034070969323 0.00459054474130646695 0.000444852046205364597 0.000444852046205364597 0.0352691750340703991 0.0155121670150422022 0.0305100172191348808 0.00509094875908995374 0.000223149338253895665 0.068234364306498721 0.000223149338253895665 0.00482959765650080395 0.00564938782923639967 0.00152431698991743725 0.0452101131499583614 0.000277409648641513277 0.0241670804860386786 0.000400878651114653479 0.000400878651114653479 0.0388996079922467736 0.000444852046205364597 0.00160952034070969323 0.000388775237040830544 0.00551513524977442857 0.000534450558532895722 0.0376308173372357849 0.000783250216693656275 0.000141982221496269483 0.000444852046205364597 0.00152431698991743725 0.00564938782923639967 0.000277409648641513277 0.000444852046205364597 0.000444852046205364597 0.0241670804860386786 0.000388775237040830544 0.000141982221496269483 0.00459054474130646695 0.00459054474130646695 0.000277409648641513277 0.000783250216693656275 0.000388775237040830544 0.00171053510157377414 0.000277409648641513277 0.000458701252646065362 0.000141982221496269483 0.00150505870040525342 0.000216411965650798458 0.00289235883362637782 0.000444852046205364597 0.000141982221496269483 0.00185433460581665185 0.044943684781780735 0.000277409648641513277 0.0432685162660981712 0.0138636879903672253 ] ;
learners_error = 12 [ 0.0499999999999999958 0.0894736842105261221 0.216933015980959626 0.145753647620590565 0.21653914793577192 0.24928069626397617 0.248752945086009536 0.221730362614801613 0.267508669379056652 0.357595079156143969 0.261544400526413423 0.327270139869447474 ] ;
weak_learner_template = *391 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 3 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *392 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 0 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 1  )
;
root = *0 ;
priority_queue = *0 ;
first_leave = *0 ;
split_cols = []
;
split_values = []
;
random_gen = *0 ;
seed = 1827 ;
stage = 0 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
target_error = 0.5 ;
pseudo_loss_adaboost = 1 ;
conf_rated_adaboost = 0 ;
weight_by_resampling = 0 ;
output_threshold = 0.5 ;
provide_learner_expdir = 1 ;
early_stopping = 0 ;
save_often = 0 ;
compute_training_error = 0 ;
forward_sub_learner_test_costs = 1 ;
modif_train_set_weights = 1 ;
found_zero_error_weak_learner = 0 ;
random_gen = *0 ;
seed = 1827 ;
stage = 12 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 0 ;
nstages = 12 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
learner2 = *393 ->AdaBoost(
weak_learners = 12 [ *394 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *395 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *396 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *397 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000067 ;
targets_sum = 92 ;
weighted_targets_sum = 0.460000000000000298 ;
weighted_squared_targets_sum = 0.460000000000000298 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.496800000000000352 0 0.496800000000000352 ] ;
split_col = 2 ;
split_balance = 14 ;
split_feature_value = 0.883141897664061037 ;
after_split_error = 0.171677218370013096 ;
missing_node = *0 ;
missing_leave = *398 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *399 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *400 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 107 ;
weights_sum = 0.535000000000000364 ;
targets_sum = 9 ;
weighted_targets_sum = 0.0449999999999999983 ;
weighted_squared_targets_sum = 0.0449999999999999983 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0824299065420560778 0 0.0824299065420560778 ] ;
split_col = 2 ;
split_balance = 65 ;
split_feature_value = 0.12373287907043895 ;
after_split_error = 0.0662015503875969108 ;
missing_node = *0 ;
missing_leave = *401 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *402 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *403 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 86 ;
weights_sum = 0.430000000000000271 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0100000000000000002 ;
weighted_squared_targets_sum = 0.0100000000000000002 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0195348837209302316 0 0.0195348837209302316 ] ;
split_col = 4 ;
split_balance = 82 ;
split_feature_value = 0.999999999999998335 ;
after_split_error = 0.0148809523809523801 ;
missing_node = *0 ;
missing_leave = *404 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *405 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999995674 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *406 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 85 ;
weights_sum = 0.425000000000000266 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0100000000000000002 ;
weighted_squared_targets_sum = 0.0100000000000000002 ;
loss_function_factor = 2  )
 )
;
left_leave = *403  ;
right_node = *407 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *408 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 21 ;
weights_sum = 0.105000000000000024 ;
targets_sum = 7 ;
weighted_targets_sum = 0.0350000000000000033 ;
weighted_squared_targets_sum = 0.0350000000000000033 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0466666666666666757 0 0.0466666666666666757 ] ;
split_col = 3 ;
split_balance = 17 ;
split_feature_value = 0.14842107991859671 ;
after_split_error = 0.0368421052631578982 ;
missing_node = *0 ;
missing_leave = *409 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *410 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999999837 ;
targets_sum = 0 ;
weighted_targets_sum = -1.73472347597680709e-18 ;
weighted_squared_targets_sum = -1.73472347597680709e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *411 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 20 ;
weights_sum = 0.100000000000000019 ;
targets_sum = 7 ;
weighted_targets_sum = 0.0350000000000000033 ;
weighted_squared_targets_sum = 0.0350000000000000033 ;
loss_function_factor = 2  )
 )
;
right_leave = *408   )
;
left_leave = *400  ;
right_node = *412 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *413 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 93 ;
weights_sum = 0.465000000000000302 ;
targets_sum = 83 ;
weighted_targets_sum = 0.415000000000000258 ;
weighted_squared_targets_sum = 0.415000000000000258 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0892473118279570876 0 0.0892473118279570876 ] ;
split_col = 2 ;
split_balance = 39 ;
split_feature_value = 0.997650553369808346 ;
after_split_error = 0.0629629629629629844 ;
missing_node = *0 ;
missing_leave = *414 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *415 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *416 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 27 ;
weights_sum = 0.135000000000000037 ;
targets_sum = 17 ;
weighted_targets_sum = 0.0850000000000000061 ;
weighted_squared_targets_sum = 0.0850000000000000061 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0629629629629629844 0 0.0629629629629629844 ] ;
split_col = 3 ;
split_balance = 13 ;
split_feature_value = 0.496260749748818786 ;
after_split_error = 0.0500000000000000097 ;
missing_node = *0 ;
missing_leave = *417 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *418 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999999837 ;
targets_sum = 0 ;
weighted_targets_sum = -1.73472347597680709e-18 ;
weighted_squared_targets_sum = -1.73472347597680709e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *419 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 26 ;
weights_sum = 0.130000000000000032 ;
targets_sum = 17 ;
weighted_targets_sum = 0.0850000000000000061 ;
weighted_squared_targets_sum = 0.0850000000000000061 ;
loss_function_factor = 2  )
 )
;
left_leave = *416  ;
right_node = *420 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *421 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.330000000000000182 ;
targets_sum = 66 ;
weighted_targets_sum = 0.330000000000000182 ;
weighted_squared_targets_sum = 0.330000000000000182 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.890956512155314684 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *422 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *423 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00499999999999999837 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00499999999999999837 ;
weighted_squared_targets_sum = 0.00499999999999999837 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *424 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 65 ;
weights_sum = 0.325000000000000178 ;
targets_sum = 65 ;
weighted_targets_sum = 0.325000000000000178 ;
weighted_squared_targets_sum = 0.325000000000000178 ;
loss_function_factor = 2  )
 )
;
right_leave = *421   )
;
right_leave = *413   )
;
priority_queue = *425 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *415  *407  *402  *420  ]  )
;
first_leave = *397  ;
split_cols = 3 [ 2 2 2 ] ;
split_values = 3 [ 0.883141897664061037 0.997650553369808346 0.12373287907043895 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*426 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *427 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *428 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *429 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000333 ;
targets_sum = 92 ;
weighted_targets_sum = 0.466123873218958873 ;
weighted_squared_targets_sum = 0.466123873218958873 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.497704816068631095 0 0.497704816068631095 ] ;
split_col = 1 ;
split_balance = 28 ;
split_feature_value = 0.479480044756096346 ;
after_split_error = 0.354065326145222459 ;
missing_node = *0 ;
missing_leave = *430 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *431 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *432 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 86 ;
weights_sum = 0.355335853445769012 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0373655132305902998 ;
weighted_squared_targets_sum = 0.0373655132305902998 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0668726492923903265 0 0.0668726492923903265 ] ;
split_col = 2 ;
split_balance = 66 ;
split_feature_value = 0.449086344763339085 ;
after_split_error = 0.0555251526606571899 ;
missing_node = *0 ;
missing_leave = *433 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *434 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00276243093922654221 ;
targets_sum = 0 ;
weighted_targets_sum = 8.67361737988403547e-19 ;
weighted_squared_targets_sum = 8.67361737988403547e-19 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *435 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 85 ;
weights_sum = 0.352573422506542222 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0373655132305902998 ;
weighted_squared_targets_sum = 0.0373655132305902998 ;
loss_function_factor = 2  )
 )
;
left_leave = *432  ;
right_node = *436 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *437 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 114 ;
weights_sum = 0.644664146554232986 ;
targets_sum = 87 ;
weighted_targets_sum = 0.428758359988368309 ;
weighted_squared_targets_sum = 0.428758359988368309 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.287192676852833673 0 0.287192676852833673 ] ;
split_col = 2 ;
split_balance = 14 ;
split_feature_value = 0.997650553369808346 ;
after_split_error = 0.232544890067519716 ;
missing_node = *0 ;
missing_leave = *438 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *439 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *440 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 50 ;
weights_sum = 0.467868566443733702 ;
targets_sum = 23 ;
weighted_targets_sum = 0.251962779877871412 ;
weighted_squared_targets_sum = 0.251962779877871412 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.232544890067519661 0 0.232544890067519661 ] ;
split_col = 3 ;
split_balance = 18 ;
split_feature_value = 0.496260749748818786 ;
after_split_error = 0.124392796099083422 ;
missing_node = *0 ;
missing_leave = *441 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *442 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *443 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 34 ;
weights_sum = 0.282349520209363103 ;
targets_sum = 15 ;
weighted_targets_sum = 0.229863332364059342 ;
weighted_squared_targets_sum = 0.229863332364059342 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0854589732064111596 0 0.0854589732064111596 ] ;
split_col = 2 ;
split_balance = 12 ;
split_feature_value = 0.0707071480833099397 ;
after_split_error = 0.0712656098953515088 ;
missing_node = *0 ;
missing_leave = *444 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *445 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.026315789473684216 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0263157894736842125 ;
weighted_squared_targets_sum = 0.0263157894736842125 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *446 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 33 ;
weights_sum = 0.256033730735679033 ;
targets_sum = 14 ;
weighted_targets_sum = 0.203547542890375188 ;
weighted_squared_targets_sum = 0.203547542890375188 ;
loss_function_factor = 2  )
 )
;
left_leave = *443  ;
right_node = *447 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *448 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 16 ;
weights_sum = 0.185519046234370516 ;
targets_sum = 8 ;
weighted_targets_sum = 0.0220994475138121607 ;
weighted_squared_targets_sum = 0.0220994475138121607 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0389338228926722069 0 0.0389338228926722069 ] ;
split_col = 1 ;
split_balance = 12 ;
split_feature_value = 0.502718698860307178 ;
after_split_error = 0.0300966627692143031 ;
missing_node = *0 ;
missing_leave = *449 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *450 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00276243093922652313 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00276243093922651792 ;
weighted_squared_targets_sum = 0.00276243093922651792 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *451 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 15 ;
weights_sum = 0.182756615295143976 ;
targets_sum = 7 ;
weighted_targets_sum = 0.0193370165745856415 ;
weighted_squared_targets_sum = 0.0193370165745856415 ;
loss_function_factor = 2  )
 )
;
right_leave = *448   )
;
left_leave = *440  ;
right_node = *452 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *453 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 64 ;
weights_sum = 0.176795580110497258 ;
targets_sum = 64 ;
weighted_targets_sum = 0.176795580110497258 ;
weighted_squared_targets_sum = 0.176795580110497258 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.887813788792009673 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *454 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *455 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00276243093922651792 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00276243093922651792 ;
weighted_squared_targets_sum = 0.00276243093922651792 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *456 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 63 ;
weights_sum = 0.174033149171270746 ;
targets_sum = 63 ;
weighted_targets_sum = 0.174033149171270746 ;
weighted_squared_targets_sum = 0.174033149171270746 ;
loss_function_factor = 2  )
 )
;
right_leave = *453   )
;
right_leave = *437   )
;
priority_queue = *457 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *442  *447  *431  *452  ]  )
;
first_leave = *429  ;
split_cols = 3 [ 1 2 3 ] ;
split_values = 3 [ 0.479480044756096346 0.997650553369808346 0.496260749748818786 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*458 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *459 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *460 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *461 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999996669 ;
targets_sum = 92 ;
weighted_targets_sum = 0.494546432611265629 ;
weighted_squared_targets_sum = 0.494546432611265629 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.499940517205471446 0 0.499940517205471446 ] ;
split_col = 2 ;
split_balance = 28 ;
split_feature_value = 0.12373287907043895 ;
after_split_error = 0.374456126030871472 ;
missing_node = *0 ;
missing_leave = *462 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *463 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *464 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 86 ;
weights_sum = 0.289669498805058434 ;
targets_sum = 2 ;
weighted_targets_sum = 0.029633267845448584 ;
weighted_squared_targets_sum = 0.029633267845448584 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0532035531067966555 0 0.0532035531067966555 ] ;
split_col = 4 ;
split_balance = 82 ;
split_feature_value = 0.999999999999998335 ;
after_split_error = 0.0414247279866019683 ;
missing_node = *0 ;
missing_leave = *465 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *466 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00155533726260640944 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *467 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 85 ;
weights_sum = 0.288114161542452729 ;
targets_sum = 2 ;
weighted_targets_sum = 0.029633267845448584 ;
weighted_squared_targets_sum = 0.029633267845448584 ;
loss_function_factor = 2  )
 )
;
left_leave = *464  ;
right_node = *468 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *469 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 114 ;
weights_sum = 0.710330501194937791 ;
targets_sum = 90 ;
weighted_targets_sum = 0.464913164765817233 ;
weighted_squared_targets_sum = 0.464913164765817233 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.321252572924072166 0 0.321252572924072166 ] ;
split_col = 2 ;
split_balance = 18 ;
split_feature_value = 0.997650553369808346 ;
after_split_error = 0.285312501485439296 ;
missing_node = *0 ;
missing_leave = *470 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *471 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *472 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 48 ;
weights_sum = 0.586113591712805415 ;
targets_sum = 24 ;
weighted_targets_sum = 0.340696255283681304 ;
weighted_squared_targets_sum = 0.340696255283681304 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.285312501485439296 0 0.285312501485439296 ] ;
split_col = 2 ;
split_balance = 22 ;
split_feature_value = 0.627448174543832948 ;
after_split_error = 0.242168283091306363 ;
missing_node = *0 ;
missing_leave = *473 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *474 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *475 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 13 ;
weights_sum = 0.234849973209501545 ;
targets_sum = 6 ;
weighted_targets_sum = 0.191615637146088869 ;
weighted_squared_targets_sum = 0.191615637146088869 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0705503580704158195 0 0.0705503580704158195 ] ;
split_col = 2 ;
split_balance = 7 ;
split_feature_value = 0.442618283127769407 ;
after_split_error = 0.0438336932282397465 ;
missing_node = *0 ;
missing_leave = *476 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *477 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00155533726260643546 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *478 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 12 ;
weights_sum = 0.233294635946895118 ;
targets_sum = 6 ;
weighted_targets_sum = 0.191615637146088869 ;
weighted_squared_targets_sum = 0.191615637146088869 ;
loss_function_factor = 2  )
 )
;
left_leave = *475  ;
right_node = *479 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *480 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 35 ;
weights_sum = 0.351263618503304009 ;
targets_sum = 18 ;
weighted_targets_sum = 0.149080618137592491 ;
weighted_squared_targets_sum = 0.149080618137592491 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.171617925020890516 0 0.171617925020890516 ] ;
split_col = 1 ;
split_balance = 25 ;
split_feature_value = 0.6805672568090122 ;
after_split_error = 0.156790033037366772 ;
missing_node = *0 ;
missing_leave = *481 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *482 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0148166339227243232 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *483 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 34 ;
weights_sum = 0.336446984580579589 ;
targets_sum = 18 ;
weighted_targets_sum = 0.149080618137592491 ;
weighted_squared_targets_sum = 0.149080618137592491 ;
loss_function_factor = 2  )
 )
;
right_leave = *480   )
;
left_leave = *472  ;
right_node = *484 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *485 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.124216909482135207 ;
targets_sum = 66 ;
weighted_targets_sum = 0.124216909482135207 ;
weighted_squared_targets_sum = 0.124216909482135207 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.890956512155314684 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *486 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *487 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0123376623376623314 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0123376623376623314 ;
weighted_squared_targets_sum = 0.0123376623376623314 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *488 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 65 ;
weights_sum = 0.111879247144472962 ;
targets_sum = 65 ;
weighted_targets_sum = 0.111879247144472962 ;
weighted_squared_targets_sum = 0.111879247144472962 ;
loss_function_factor = 2  )
 )
;
right_leave = *485   )
;
right_leave = *469   )
;
priority_queue = *489 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *474  *479  *463  *484  ]  )
;
first_leave = *461  ;
split_cols = 3 [ 2 2 2 ] ;
split_values = 3 [ 0.12373287907043895 0.997650553369808346 0.627448174543832948 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*490 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *491 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *492 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *493 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000355 ;
targets_sum = 92 ;
weighted_targets_sum = 0.605566360137504645 ;
weighted_squared_targets_sum = 0.605566360137504645 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.477711487214639852 0 0.477711487214639852 ] ;
split_col = 2 ;
split_balance = 8 ;
split_feature_value = 0.442618283127769407 ;
after_split_error = 0.347257837360016919 ;
missing_node = *0 ;
missing_leave = *494 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *495 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *496 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 96 ;
weights_sum = 0.359826664214057179 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0953220381361555985 ;
weighted_squared_targets_sum = 0.0953220381361555985 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.140140365135299066 0 0.140140365135299066 ] ;
split_col = 4 ;
split_balance = 90 ;
split_feature_value = 0.999999999999997558 ;
after_split_error = 0.100440458626433402 ;
missing_node = *0 ;
missing_leave = *497 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *498 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *499 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 93 ;
weights_sum = 0.308997896214625589 ;
targets_sum = 3 ;
weighted_targets_sum = 0.0524218313759988244 ;
weighted_squared_targets_sum = 0.0524218313759988244 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0870568205858950062 0 0.0870568205858950062 ] ;
split_col = 0 ;
split_balance = 27 ;
split_feature_value = 0.313878478919910275 ;
after_split_error = 0.0767778848771243361 ;
missing_node = *0 ;
missing_leave = *500 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *501 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000999507556359108696 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *502 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 92 ;
weights_sum = 0.307998388658267952 ;
targets_sum = 3 ;
weighted_targets_sum = 0.0524218313759988244 ;
weighted_squared_targets_sum = 0.0524218313759988244 ;
loss_function_factor = 2  )
 )
;
left_leave = *499  ;
right_node = *503 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *504 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 3 ;
weights_sum = 0.0508287679994313749 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0429002067601567741 ;
weighted_squared_targets_sum = 0.0429002067601567741 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0133836380405383953 0 0.0133836380405383953 ] ;
split_col = 3 ;
split_balance = 1 ;
split_feature_value = 0.0434674056274751697 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *505 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *506 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *507 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00792856123927459903 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = -1 ;
split_balance = 2147483647 ;
split_feature_value = 1.79769313486231571e+308 ;
after_split_error = 1.79769313486231571e+308 ;
missing_node = *0 ;
missing_leave = *508 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *509 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *510 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *507  ;
right_node = *511 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *512 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 2 ;
weights_sum = 0.0429002067601567741 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0429002067601567741 ;
weighted_squared_targets_sum = 0.0429002067601567741 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 4 ;
split_balance = 0 ;
split_feature_value = 0.999999999999999223 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *513 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *514 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00952162461584205033 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00952162461584205033 ;
weighted_squared_targets_sum = 0.00952162461584205033 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *515 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0333785821443147238 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0333785821443147238 ;
weighted_squared_targets_sum = 0.0333785821443147238 ;
loss_function_factor = 2  )
 )
;
right_leave = *512   )
;
right_leave = *504   )
;
left_leave = *496  ;
right_node = *516 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *517 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 104 ;
weights_sum = 0.640173335785946263 ;
targets_sum = 87 ;
weighted_targets_sum = 0.510244322001350059 ;
weighted_squared_targets_sum = 0.510244322001350059 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.20711747222471788 0 0.20711747222471788 ] ;
split_col = 3 ;
split_balance = 32 ;
split_feature_value = 0.701784786855022658 ;
after_split_error = 0.197450279487326852 ;
missing_node = *0 ;
missing_leave = *518 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *519 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0095216246158420486 ;
targets_sum = 0 ;
weighted_targets_sum = -1.73472347597680709e-18 ;
weighted_squared_targets_sum = -1.73472347597680709e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *520 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 103 ;
weights_sum = 0.630651711170102658 ;
targets_sum = 87 ;
weighted_targets_sum = 0.510244322001348283 ;
weighted_squared_targets_sum = 0.510244322001348283 ;
loss_function_factor = 2  )
 )
;
right_leave = *517   )
;
priority_queue = *521 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 3 ;
nodes = 4 [ *498  *516  *511  *0 ]  )
;
first_leave = *493  ;
split_cols = 3 [ 2 4 3 ] ;
split_values = 3 [ 0.442618283127769407 0.999999999999997558 0.0434674056274751697 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*522 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *523 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *524 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *525 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000311 ;
targets_sum = 92 ;
weighted_targets_sum = 0.481991913175921327 ;
weighted_squared_targets_sum = 0.481991913175921327 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.499351417617874327 0 0.499351417617874327 ] ;
split_col = 1 ;
split_balance = 104 ;
split_feature_value = 0.6805672568090122 ;
after_split_error = 0.467958413356260372 ;
missing_node = *0 ;
missing_leave = *526 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *527 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *528 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 152 ;
weights_sum = 0.944736246107295674 ;
targets_sum = 44 ;
weighted_targets_sum = 0.426728159283215502 ;
weighted_squared_targets_sum = 0.426728159283215502 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.467958413356260372 0 0.467958413356260372 ] ;
split_col = 1 ;
split_balance = 140 ;
split_feature_value = 0.662011169718969006 ;
after_split_error = 0.436756428867164981 ;
missing_node = *0 ;
missing_leave = *529 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *530 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *531 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 146 ;
weights_sum = 0.869077754543573944 ;
targets_sum = 42 ;
weighted_targets_sum = 0.425505743103313239 ;
weighted_squared_targets_sum = 0.425505743103313239 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.43435109772621916 0 0.43435109772621916 ] ;
split_col = 4 ;
split_balance = 12 ;
split_feature_value = 1.54709578481515564e-13 ;
after_split_error = 0.405394917300886115 ;
missing_node = *0 ;
missing_leave = *532 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *533 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *534 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 67 ;
weights_sum = 0.073747726070205466 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00484838832911889048 ;
weighted_squared_targets_sum = 0.00484838832911889048 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.00905928257828314022 0 0.00905928257828314022 ] ;
split_col = 3 ;
split_balance = 65 ;
split_feature_value = 0.987251230798804613 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *535 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *536 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000611208089951136837 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *537 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.0731365179802543619 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00484838832911889048 ;
weighted_squared_targets_sum = 0.00484838832911889048 ;
loss_function_factor = 2  )
 )
;
left_leave = *534  ;
right_node = *538 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *539 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 79 ;
weights_sum = 0.795330028473368422 ;
targets_sum = 41 ;
weighted_targets_sum = 0.420657354774194359 ;
weighted_squared_targets_sum = 0.420657354774194359 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.39633563472260358 0 0.39633563472260358 ] ;
split_col = 1 ;
split_balance = 71 ;
split_feature_value = 0.408499973451678211 ;
after_split_error = 0.357693407009168129 ;
missing_node = *0 ;
missing_leave = *540 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *541 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0169962936620895629 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0169962936620895316 ;
weighted_squared_targets_sum = 0.0169962936620895316 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *542 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 78 ;
weights_sum = 0.778333734811277878 ;
targets_sum = 40 ;
weighted_targets_sum = 0.403661061112105091 ;
weighted_squared_targets_sum = 0.403661061112105091 ;
loss_function_factor = 2  )
 )
;
right_leave = *539   )
;
left_leave = *531  ;
right_node = *543 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *544 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0756584915637215361 ;
targets_sum = 2 ;
weighted_targets_sum = 0.00122241617990227541 ;
weighted_squared_targets_sum = 0.00122241617990227541 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.00240533114094590265 0 0.00240533114094590265 ] ;
split_col = 3 ;
split_balance = 2 ;
split_feature_value = 0.738796073466493564 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *545 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *546 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0261079804907304314 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *547 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 5 ;
weights_sum = 0.0495505110729911186 ;
targets_sum = 2 ;
weighted_targets_sum = 0.00122241617990227541 ;
weighted_squared_targets_sum = 0.00122241617990227541 ;
loss_function_factor = 2  )
 )
;
right_leave = *544   )
;
left_leave = *528  ;
right_node = *548 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *549 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 48 ;
weights_sum = 0.055263753892705908 ;
targets_sum = 48 ;
weighted_targets_sum = 0.055263753892705908 ;
weighted_squared_targets_sum = 0.055263753892705908 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.752591011543306765 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *550 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *551 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000611208089951137705 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000611208089951137705 ;
weighted_squared_targets_sum = 0.000611208089951137705 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *552 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 47 ;
weights_sum = 0.0546525458027547484 ;
targets_sum = 47 ;
weighted_targets_sum = 0.0546525458027547484 ;
weighted_squared_targets_sum = 0.0546525458027547484 ;
loss_function_factor = 2  )
 )
;
right_leave = *549   )
;
priority_queue = *553 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *538  *533  *543  *548  ]  )
;
first_leave = *525  ;
split_cols = 3 [ 1 1 4 ] ;
split_values = 3 [ 0.6805672568090122 0.662011169718969006 1.54709578481515564e-13 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*554 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *555 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *556 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *557 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000222 ;
targets_sum = 92 ;
weighted_targets_sum = 0.392240446759400896 ;
weighted_squared_targets_sum = 0.392240446759400896 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.476775757370773656 0 0.476775757370773656 ] ;
split_col = 1 ;
split_balance = 104 ;
split_feature_value = 0.6805672568090122 ;
after_split_error = 0.44227268942828013 ;
missing_node = *0 ;
missing_leave = *558 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *559 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *560 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 152 ;
weights_sum = 0.955378948829799124 ;
targets_sum = 44 ;
weighted_targets_sum = 0.347619395589199798 ;
weighted_squared_targets_sum = 0.347619395589199798 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.44227268942828013 0 0.44227268942828013 ] ;
split_col = 3 ;
split_balance = 86 ;
split_feature_value = 0.119889252557545484 ;
after_split_error = 0.411853948410690174 ;
missing_node = *0 ;
missing_leave = *561 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *562 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *563 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 33 ;
weights_sum = 0.133519136616596423 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0903779594501199074 ;
weighted_squared_targets_sum = 0.0903779594501199074 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0584037862943701247 0 0.0584037862943701247 ] ;
split_col = 3 ;
split_balance = 31 ;
split_feature_value = 0.119702025390566957 ;
after_split_error = 0.0238499860947938014 ;
missing_node = *0 ;
missing_leave = *564 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *565 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *566 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 32 ;
weights_sum = 0.0596216744560958689 ;
targets_sum = 1 ;
weighted_targets_sum = 0.016480497289619353 ;
weighted_squared_targets_sum = 0.016480497289619353 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0238499860947938014 0 0.0238499860947938014 ] ;
split_col = 2 ;
split_balance = 30 ;
split_feature_value = 0.0544487023778579271 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *567 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *568 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000493501536473626512 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *569 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 31 ;
weights_sum = 0.0591281729196222322 ;
targets_sum = 1 ;
weighted_targets_sum = 0.016480497289619353 ;
weighted_squared_targets_sum = 0.016480497289619353 ;
loss_function_factor = 2  )
 )
;
left_leave = *566  ;
right_node = *570 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *571 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0738974621605005544 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0738974621605005544 ;
weighted_squared_targets_sum = 0.0738974621605005544 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = -1 ;
split_balance = 2147483647 ;
split_feature_value = 1.79769313486231571e+308 ;
after_split_error = 1.79769313486231571e+308 ;
missing_node = *0 ;
missing_leave = *572 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *573 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *574 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
right_leave = *571   )
;
left_leave = *563  ;
right_node = *575 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *576 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 119 ;
weights_sum = 0.821859812213203367 ;
targets_sum = 42 ;
weighted_targets_sum = 0.257241436139079571 ;
weighted_squared_targets_sum = 0.257241436139079571 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.353450162116320021 0 0.353450162116320021 ] ;
split_col = 3 ;
split_balance = 37 ;
split_feature_value = 0.711118874226568165 ;
after_split_error = 0.327041816880288938 ;
missing_node = *0 ;
missing_leave = *577 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *578 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000493501536473595287 ;
targets_sum = 0 ;
weighted_targets_sum = -1.73472347597680709e-18 ;
weighted_squared_targets_sum = -1.73472347597680709e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *579 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 118 ;
weights_sum = 0.82136631067673016 ;
targets_sum = 42 ;
weighted_targets_sum = 0.257241436139079516 ;
weighted_squared_targets_sum = 0.257241436139079516 ;
loss_function_factor = 2  )
 )
;
right_leave = *576   )
;
left_leave = *560  ;
right_node = *580 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *581 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 48 ;
weights_sum = 0.044621051170201001 ;
targets_sum = 48 ;
weighted_targets_sum = 0.044621051170201001 ;
weighted_squared_targets_sum = 0.044621051170201001 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.752591011543306765 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *582 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *583 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00049350153647362391 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00049350153647362391 ;
weighted_squared_targets_sum = 0.00049350153647362391 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *584 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 47 ;
weights_sum = 0.044127549633727399 ;
targets_sum = 47 ;
weighted_targets_sum = 0.044127549633727399 ;
weighted_squared_targets_sum = 0.044127549633727399 ;
loss_function_factor = 2  )
 )
;
right_leave = *581   )
;
priority_queue = *585 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 3 ;
nodes = 4 [ *575  *580  *565  *0 ]  )
;
first_leave = *557  ;
split_cols = 3 [ 1 3 3 ] ;
split_values = 3 [ 0.6805672568090122 0.119889252557545484 0.119702025390566957 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*586 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *587 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *588 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *589 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999997446 ;
targets_sum = 92 ;
weighted_targets_sum = 0.581593069366817539 ;
weighted_squared_targets_sum = 0.581593069366817539 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.486685142062601717 0 0.486685142062601717 ] ;
split_col = 3 ;
split_balance = 62 ;
split_feature_value = 0.711118874226568165 ;
after_split_error = 0.4668341465742194 ;
missing_node = *0 ;
missing_leave = *590 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *591 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *592 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 131 ;
weights_sum = 0.499014213036646614 ;
targets_sum = 32 ;
weighted_targets_sum = 0.240409908482151852 ;
weighted_squared_targets_sum = 0.240409908482151852 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.249175416518530701 0 0.249175416518530701 ] ;
split_col = 2 ;
split_balance = 51 ;
split_feature_value = 0.216049487742465185 ;
after_split_error = 0.222023797905294529 ;
missing_node = *0 ;
missing_leave = *593 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *594 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *595 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 91 ;
weights_sum = 0.260424623188368565 ;
targets_sum = 5 ;
weighted_targets_sum = 0.166579008471686968 ;
weighted_squared_targets_sum = 0.166579008471686968 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.120055540505579844 0 0.120055540505579844 ] ;
split_col = 1 ;
split_balance = 57 ;
split_feature_value = 0.488019810363248041 ;
after_split_error = 0.0902535175820549929 ;
missing_node = *0 ;
missing_leave = *596 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *597 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *598 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 74 ;
weights_sum = 0.0319515719573615839 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.174966118866960257 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *599 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *600 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000339746964136894815 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *601 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 73 ;
weights_sum = 0.0316118249932247214 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *598  ;
right_node = *602 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *603 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 17 ;
weights_sum = 0.228473051231006974 ;
targets_sum = 5 ;
weighted_targets_sum = 0.166579008471686996 ;
weighted_squared_targets_sum = 0.166579008471686996 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0902535175820549929 0 0.0902535175820549929 ] ;
split_col = 4 ;
split_balance = 3 ;
split_feature_value = 0.999999858495719041 ;
after_split_error = 0.0721715137430611886 ;
missing_node = *0 ;
missing_leave = *604 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *605 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0508740836064100685 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0508740836064100962 ;
weighted_squared_targets_sum = 0.0508740836064100962 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *606 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 16 ;
weights_sum = 0.177598967624596898 ;
targets_sum = 4 ;
weighted_targets_sum = 0.11570492486527692 ;
weighted_squared_targets_sum = 0.11570492486527692 ;
loss_function_factor = 2  )
 )
;
right_leave = *603   )
;
left_leave = *595  ;
right_node = *607 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *608 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 40 ;
weights_sum = 0.238589589848277717 ;
targets_sum = 27 ;
weighted_targets_sum = 0.0738309000104650087 ;
weighted_squared_targets_sum = 0.0738309000104650087 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.101968257399714685 0 0.101968257399714685 ] ;
split_col = 1 ;
split_balance = 0 ;
split_feature_value = 0.6805672568090122 ;
after_split_error = 0.0797705176182461895 ;
missing_node = *0 ;
missing_leave = *609 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *610 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00193709325952056127 ;
targets_sum = 0 ;
weighted_targets_sum = 3.46944695195361419e-18 ;
weighted_squared_targets_sum = 3.46944695195361419e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *611 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 39 ;
weights_sum = 0.236652496588757283 ;
targets_sum = 27 ;
weighted_targets_sum = 0.0738309000104649255 ;
weighted_squared_targets_sum = 0.0738309000104649255 ;
loss_function_factor = 2  )
 )
;
right_leave = *608   )
;
left_leave = *592  ;
right_node = *612 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *613 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 69 ;
weights_sum = 0.500985786963352053 ;
targets_sum = 60 ;
weighted_targets_sum = 0.341183160884665881 ;
weighted_squared_targets_sum = 0.341183160884665881 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.217658730055688643 0 0.217658730055688643 ] ;
split_col = 2 ;
split_balance = 59 ;
split_feature_value = 0.941974890824293754 ;
after_split_error = 0.190762293116890191 ;
missing_node = *0 ;
missing_leave = *614 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *615 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.014512417713875448 ;
targets_sum = 0 ;
weighted_targets_sum = 1.38777878078144568e-17 ;
weighted_squared_targets_sum = 1.38777878078144568e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *616 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 68 ;
weights_sum = 0.486473369249476373 ;
targets_sum = 60 ;
weighted_targets_sum = 0.341183160884665659 ;
weighted_squared_targets_sum = 0.341183160884665659 ;
loss_function_factor = 2  )
 )
;
right_leave = *613   )
;
priority_queue = *617 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *612  *607  *597  *602  ]  )
;
first_leave = *589  ;
split_cols = 3 [ 3 2 1 ] ;
split_values = 3 [ 0.711118874226568165 0.216049487742465185 0.488019810363248041 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*618 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *619 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *620 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *621 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999997891 ;
targets_sum = 92 ;
weighted_targets_sum = 0.485298425293867908 ;
weighted_squared_targets_sum = 0.485298425293867908 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.499567727402319084 0 0.499567727402319084 ] ;
split_col = 2 ;
split_balance = 68 ;
split_feature_value = 0.997650553369808346 ;
after_split_error = 0.475282190087886691 ;
missing_node = *0 ;
missing_leave = *622 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *623 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *624 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 134 ;
weights_sum = 0.956172859182146451 ;
targets_sum = 26 ;
weighted_targets_sum = 0.441471284476015913 ;
weighted_squared_targets_sum = 0.441471284476015913 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.475282190087886691 0 0.475282190087886691 ] ;
split_col = 2 ;
split_balance = 90 ;
split_feature_value = 0.960331052047352696 ;
after_split_error = 0.438548801813753442 ;
missing_node = *0 ;
missing_leave = *625 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *626 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *627 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 112 ;
weights_sum = 0.506925038213422607 ;
targets_sum = 14 ;
weighted_targets_sum = 0.300190306601266166 ;
weighted_squared_targets_sum = 0.300190306601266166 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.24484788791062112 0 0.24484788791062112 ] ;
split_col = 3 ;
split_balance = 90 ;
split_feature_value = 0.642420030204781112 ;
after_split_error = 0.20052880731762443 ;
missing_node = *0 ;
missing_leave = *628 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *629 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *630 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 101 ;
weights_sum = 0.372563674989123572 ;
targets_sum = 10 ;
weighted_targets_sum = 0.173845879643221707 ;
weighted_squared_targets_sum = 0.173845879643221707 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.185451627476449721 0 0.185451627476449721 ] ;
split_col = 1 ;
split_balance = 97 ;
split_feature_value = 0.689386369193649928 ;
after_split_error = 0.172654263127876573 ;
missing_node = *0 ;
missing_leave = *631 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *632 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000241135741523314907 ;
targets_sum = 0 ;
weighted_targets_sum = 6.93889390390722838e-18 ;
weighted_squared_targets_sum = 6.93889390390722838e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *633 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 100 ;
weights_sum = 0.372322539247600282 ;
targets_sum = 10 ;
weighted_targets_sum = 0.173845879643221735 ;
weighted_squared_targets_sum = 0.173845879643221735 ;
loss_function_factor = 2  )
 )
;
left_leave = *630  ;
right_node = *634 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *635 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 11 ;
weights_sum = 0.134361363224298869 ;
targets_sum = 4 ;
weighted_targets_sum = 0.126344426958044487 ;
weighted_squared_targets_sum = 0.126344426958044487 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0150771798411747093 0 0.0150771798411747093 ] ;
split_col = 4 ;
split_balance = 1 ;
split_feature_value = 1.54709578481515564e-13 ;
after_split_error = 0.00811482509180619371 ;
missing_node = *0 ;
missing_leave = *636 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *637 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000241135741523304065 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *638 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 10 ;
weights_sum = 0.13412022748277555 ;
targets_sum = 4 ;
weighted_targets_sum = 0.126344426958044487 ;
weighted_squared_targets_sum = 0.126344426958044487 ;
loss_function_factor = 2  )
 )
;
right_leave = *635   )
;
left_leave = *627  ;
right_node = *639 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *640 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 22 ;
weights_sum = 0.449247820968723677 ;
targets_sum = 12 ;
weighted_targets_sum = 0.141280977874749913 ;
weighted_squared_targets_sum = 0.141280977874749913 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.193700913903132377 0 0.193700913903132377 ] ;
split_col = 4 ;
split_balance = 14 ;
split_feature_value = 0.500140901567539986 ;
after_split_error = 0.15162762203233901 ;
missing_node = *0 ;
missing_leave = *641 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *642 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0245534076066462811 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *643 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 21 ;
weights_sum = 0.424694413362077361 ;
targets_sum = 12 ;
weighted_targets_sum = 0.141280977874749913 ;
weighted_squared_targets_sum = 0.141280977874749913 ;
loss_function_factor = 2  )
 )
;
right_leave = *640   )
;
left_leave = *624  ;
right_node = *644 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *645 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.0438271408178518979 ;
targets_sum = 66 ;
weighted_targets_sum = 0.0438271408178518979 ;
weighted_squared_targets_sum = 0.0438271408178518979 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.890956512155314684 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *646 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *647 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00825470079355741099 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00825470079355741099 ;
weighted_squared_targets_sum = 0.00825470079355741099 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *648 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 65 ;
weights_sum = 0.0355724400242945493 ;
targets_sum = 65 ;
weighted_targets_sum = 0.0355724400242945493 ;
weighted_squared_targets_sum = 0.0355724400242945493 ;
loss_function_factor = 2  )
 )
;
right_leave = *645   )
;
priority_queue = *649 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *639  *634  *629  *644  ]  )
;
first_leave = *621  ;
split_cols = 3 [ 2 2 3 ] ;
split_values = 3 [ 0.997650553369808346 0.960331052047352696 0.642420030204781112 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*650 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *651 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *652 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *653 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000089 ;
targets_sum = 92 ;
weighted_targets_sum = 0.613302730417886077 ;
weighted_squared_targets_sum = 0.613302730417886077 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.474324982559704345 0 0.474324982559704345 ] ;
split_col = 1 ;
split_balance = 28 ;
split_feature_value = 0.479480044756096346 ;
after_split_error = 0.437989797099442746 ;
missing_node = *0 ;
missing_leave = *654 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *655 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *656 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 86 ;
weights_sum = 0.206039904666722368 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0718488715484882495 ;
weighted_squared_targets_sum = 0.0718488715484882495 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0935884174191052853 0 0.0935884174191052853 ] ;
split_col = 1 ;
split_balance = 46 ;
split_feature_value = 0.408499973451678211 ;
after_split_error = 0.0525521160654311703 ;
missing_node = *0 ;
missing_leave = *657 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *658 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *659 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 66 ;
weights_sum = 0.102064478050155519 ;
targets_sum = 4 ;
weighted_targets_sum = 0.0680996870826439948 ;
weighted_squared_targets_sum = 0.0680996870826439948 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0453241260995489587 0 0.0453241260995489587 ] ;
split_col = 4 ;
split_balance = 58 ;
split_feature_value = 1.54709578481515564e-13 ;
after_split_error = 0.0109025982794831913 ;
missing_node = *0 ;
missing_leave = *660 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *661 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *662 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 62 ;
weights_sum = 0.0397728989845104811 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00609782455841582742 ;
weighted_squared_targets_sum = 0.00609782455841582742 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0103258601251013694 0 0.0103258601251013694 ] ;
split_col = 3 ;
split_balance = 60 ;
split_feature_value = 0.987251230798804613 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *663 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *664 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000178129223983526105 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *665 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 61 ;
weights_sum = 0.0395947697605269905 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00609782455841582742 ;
weighted_squared_targets_sum = 0.00609782455841582742 ;
loss_function_factor = 2  )
 )
;
left_leave = *662  ;
right_node = *666 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *667 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 4 ;
weights_sum = 0.0622915790656450516 ;
targets_sum = 3 ;
weighted_targets_sum = 0.0620018625242281657 ;
weighted_squared_targets_sum = 0.0620018625242281657 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.000576738154381820078 0 0.000576738154381820078 ] ;
split_col = 3 ;
split_balance = 2 ;
split_feature_value = 0.624616292049510191 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *668 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *669 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0131429736748032988 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0131429736748032988 ;
weighted_squared_targets_sum = 0.0131429736748032988 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *670 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 3 ;
weights_sum = 0.0491486053908417528 ;
targets_sum = 2 ;
weighted_targets_sum = 0.0488588888494248669 ;
weighted_squared_targets_sum = 0.0488588888494248669 ;
loss_function_factor = 2  )
 )
;
right_leave = *667   )
;
left_leave = *659  ;
right_node = *671 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *672 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 20 ;
weights_sum = 0.103975426616566904 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00374918446584425252 ;
weighted_squared_targets_sum = 0.00374918446584425252 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.00722798996588220992 0 0.00722798996588220992 ] ;
split_col = 4 ;
split_balance = 18 ;
split_feature_value = 0.497196075517891301 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *673 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *674 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000178129223983522093 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *675 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 19 ;
weights_sum = 0.103797297392583393 ;
targets_sum = 1 ;
weighted_targets_sum = 0.00374918446584425252 ;
weighted_squared_targets_sum = 0.00374918446584425252 ;
loss_function_factor = 2  )
 )
;
right_leave = *672   )
;
left_leave = *656  ;
right_node = *676 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *677 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 114 ;
weights_sum = 0.793960095333278271 ;
targets_sum = 87 ;
weighted_targets_sum = 0.541453858869398008 ;
weighted_squared_targets_sum = 0.541453858869398008 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.344401379680337461 0 0.344401379680337461 ] ;
split_col = 1 ;
split_balance = 100 ;
split_feature_value = 0.495842598540276014 ;
after_split_error = 0.322496386301985238 ;
missing_node = *0 ;
missing_leave = *678 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *679 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0558697575303407773 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0558697575303407357 ;
weighted_squared_targets_sum = 0.0558697575303407357 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *680 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 113 ;
weights_sum = 0.738090337802937424 ;
targets_sum = 86 ;
weighted_targets_sum = 0.485584101339056939 ;
weighted_squared_targets_sum = 0.485584101339056939 ;
loss_function_factor = 2  )
 )
;
right_leave = *677   )
;
priority_queue = *681 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *676  *671  *661  *666  ]  )
;
first_leave = *653  ;
split_cols = 3 [ 1 1 4 ] ;
split_values = 3 [ 0.479480044756096346 0.408499973451678211 1.54709578481515564e-13 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*682 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *683 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *684 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *685 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000155 ;
targets_sum = 92 ;
weighted_targets_sum = 0.427947843726230792 ;
weighted_squared_targets_sum = 0.427947843726230792 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.489616973552601253 0 0.489616973552601253 ] ;
split_col = 1 ;
split_balance = 104 ;
split_feature_value = 0.6805672568090122 ;
after_split_error = 0.464965066090214818 ;
missing_node = *0 ;
missing_leave = *686 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *687 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *688 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 152 ;
weights_sum = 0.963701247437870001 ;
targets_sum = 44 ;
weighted_targets_sum = 0.391649091164100738 ;
weighted_squared_targets_sum = 0.391649091164100738 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.464965066090214874 0 0.464965066090214874 ] ;
split_col = 4 ;
split_balance = 54 ;
split_feature_value = 0.999999964757892545 ;
after_split_error = 0.44091836246908811 ;
missing_node = *0 ;
missing_leave = *689 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *690 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *691 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 103 ;
weights_sum = 0.39841617504778909 ;
targets_sum = 12 ;
weighted_targets_sum = 0.214924998806458073 ;
weighted_squared_targets_sum = 0.214924998806458073 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.197968071100192128 0 0.197968071100192128 ] ;
split_col = 1 ;
split_balance = 99 ;
split_feature_value = 0.552069282377009474 ;
after_split_error = 0.173757841628789905 ;
missing_node = *0 ;
missing_leave = *692 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *693 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000120788990143721729 ;
targets_sum = 0 ;
weighted_targets_sum = -6.93889390390722838e-18 ;
weighted_squared_targets_sum = -6.93889390390722838e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *694 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 102 ;
weights_sum = 0.398295386057646639 ;
targets_sum = 12 ;
weighted_targets_sum = 0.214924998806458073 ;
weighted_squared_targets_sum = 0.214924998806458073 ;
loss_function_factor = 2  )
 )
;
left_leave = *691  ;
right_node = *695 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *696 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 49 ;
weights_sum = 0.565285072390081855 ;
targets_sum = 32 ;
weighted_targets_sum = 0.176724092357642637 ;
weighted_squared_targets_sum = 0.176724092357642637 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.24295029136889601 0 0.24295029136889601 ] ;
split_col = 1 ;
split_balance = 39 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.216740446543295801 ;
missing_node = *0 ;
missing_leave = *697 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *698 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *699 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 5 ;
weights_sum = 0.113281643080132152 ;
targets_sum = 3 ;
weighted_targets_sum = 0.000961483719544341709 ;
weighted_squared_targets_sum = 0.000961483719544341709 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.00190664615493684798 0 0.00190664615493684798 ] ;
split_col = 3 ;
split_balance = 1 ;
split_feature_value = 0.92637587089929152 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *700 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *701 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0561600796802939131 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *702 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 4 ;
weights_sum = 0.057121563399838246 ;
targets_sum = 3 ;
weighted_targets_sum = 0.000961483719544341709 ;
weighted_squared_targets_sum = 0.000961483719544341709 ;
loss_function_factor = 2  )
 )
;
left_leave = *699  ;
right_node = *703 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *704 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 44 ;
weights_sum = 0.452003429309950133 ;
targets_sum = 29 ;
weighted_targets_sum = 0.175762608638098256 ;
weighted_squared_targets_sum = 0.175762608638098256 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.214833800388359003 0 0.214833800388359003 ] ;
split_col = 1 ;
split_balance = 30 ;
split_feature_value = 0.544178240629241028 ;
after_split_error = 0.172423668717861467 ;
missing_node = *0 ;
missing_leave = *705 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *706 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0365602083497618274 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *707 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 43 ;
weights_sum = 0.415443220960188264 ;
targets_sum = 29 ;
weighted_targets_sum = 0.175762608638098228 ;
weighted_squared_targets_sum = 0.175762608638098228 ;
loss_function_factor = 2  )
 )
;
right_leave = *704   )
;
right_leave = *696   )
;
left_leave = *688  ;
right_node = *708 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *709 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 48 ;
weights_sum = 0.0362987525621300128 ;
targets_sum = 48 ;
weighted_targets_sum = 0.0362987525621300128 ;
weighted_squared_targets_sum = 0.0362987525621300128 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 3 ;
split_balance = 0 ;
split_feature_value = 0.752591011543306765 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *710 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *711 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000287934265741774937 ;
targets_sum = 1 ;
weighted_targets_sum = 0.000287934265741774937 ;
weighted_squared_targets_sum = 0.000287934265741774937 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *712 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 47 ;
weights_sum = 0.0360108182963882542 ;
targets_sum = 47 ;
weighted_targets_sum = 0.0360108182963882542 ;
weighted_squared_targets_sum = 0.0360108182963882542 ;
loss_function_factor = 2  )
 )
;
right_leave = *709   )
;
priority_queue = *713 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *703  *690  *698  *708  ]  )
;
first_leave = *685  ;
split_cols = 3 [ 1 4 1 ] ;
split_values = 3 [ 0.6805672568090122 0.999999964757892545 0.531511881898726335 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*714 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *715 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *716 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *717 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 0.999999999999998668 ;
targets_sum = 92 ;
weighted_targets_sum = 0.441638038891628504 ;
weighted_squared_targets_sum = 0.441638038891628504 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.493187762991169343 0 0.493187762991169343 ] ;
split_col = 1 ;
split_balance = 6 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.464460608552705823 ;
missing_node = *0 ;
missing_leave = *718 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *719 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *720 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 103 ;
weights_sum = 0.429335299645965118 ;
targets_sum = 13 ;
weighted_targets_sum = 0.130288208924507709 ;
weighted_squared_targets_sum = 0.130288208924507709 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.181500612068526523 0 0.181500612068526523 ] ;
split_col = 1 ;
split_balance = 87 ;
split_feature_value = 0.502718698860307178 ;
after_split_error = 0.148202035155245299 ;
missing_node = *0 ;
missing_leave = *721 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *722 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *723 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 95 ;
weights_sum = 0.298035239982574751 ;
targets_sum = 11 ;
weighted_targets_sum = 0.129398478251990745 ;
weighted_squared_targets_sum = 0.129398478251990745 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.146434632002289067 0 0.146434632002289067 ] ;
split_col = 4 ;
split_balance = 81 ;
split_feature_value = 0.264644704110722606 ;
after_split_error = 0.110345584607090541 ;
missing_node = *0 ;
missing_leave = *724 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *725 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.00016766222960705129 ;
targets_sum = 0 ;
weighted_targets_sum = -1.38777878078144568e-17 ;
weighted_squared_targets_sum = -1.38777878078144568e-17 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *726 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 94 ;
weights_sum = 0.297867577752968959 ;
targets_sum = 11 ;
weighted_targets_sum = 0.129398478251990745 ;
weighted_squared_targets_sum = 0.129398478251990745 ;
loss_function_factor = 2  )
 )
;
left_leave = *723  ;
right_node = *727 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *728 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 8 ;
weights_sum = 0.13130005966339045 ;
targets_sum = 2 ;
weighted_targets_sum = 0.000889730672516971508 ;
weighted_squared_targets_sum = 0.000889730672516971508 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.00176740315295624019 0 0.00176740315295624019 ] ;
split_col = 4 ;
split_balance = 4 ;
split_feature_value = 0.999999999998003708 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *729 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *730 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0144763715039025256 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *731 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.116823688159487946 ;
targets_sum = 2 ;
weighted_targets_sum = 0.000889730672516971508 ;
weighted_squared_targets_sum = 0.000889730672516971508 ;
loss_function_factor = 2  )
 )
;
right_leave = *728   )
;
left_leave = *720  ;
right_node = *732 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *733 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 97 ;
weights_sum = 0.570664700354033827 ;
targets_sum = 79 ;
weighted_targets_sum = 0.311349829967120295 ;
weighted_squared_targets_sum = 0.311349829967120295 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.282959996484179466 0 0.282959996484179466 ] ;
split_col = 2 ;
split_balance = 83 ;
split_feature_value = 0.0689879291310910303 ;
after_split_error = 0.233209680328619551 ;
missing_node = *0 ;
missing_leave = *734 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *735 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *736 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.0728921172508161241 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0 0 0 ] ;
split_col = 4 ;
split_balance = 1 ;
split_feature_value = 0.999999932728100394 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *737 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *738 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0144763715039025239 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *739 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0584157457469136054 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
 )
;
left_leave = *736  ;
right_node = *740 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *741 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 90 ;
weights_sum = 0.497772583103216981 ;
targets_sum = 79 ;
weighted_targets_sum = 0.311349829967120351 ;
weighted_squared_targets_sum = 0.311349829967120351 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.233209680328619218 0 0.233209680328619218 ] ;
split_col = 1 ;
split_balance = 76 ;
split_feature_value = 0.544178240629241028 ;
after_split_error = 0.210355535310927766 ;
missing_node = *0 ;
missing_leave = *742 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *743 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0166030527017196824 ;
targets_sum = 1 ;
weighted_targets_sum = 0.016603052701719738 ;
weighted_squared_targets_sum = 0.016603052701719738 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *744 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 89 ;
weights_sum = 0.481169530401498124 ;
targets_sum = 78 ;
weighted_targets_sum = 0.294746777265401327 ;
weighted_squared_targets_sum = 0.294746777265401327 ;
loss_function_factor = 2  )
 )
;
right_leave = *741   )
;
right_leave = *733   )
;
priority_queue = *745 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *722  *727  *740  *735  ]  )
;
first_leave = *717  ;
split_cols = 3 [ 1 2 1 ] ;
split_values = 3 [ 0.531511881898726335 0.0689879291310910303 0.502718698860307178 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
*746 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 4 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *747 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
root = *748 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *749 ->RegressionTreeLeave(
id = 1 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 200 ;
weights_sum = 1.00000000000000244 ;
targets_sum = 92 ;
weighted_targets_sum = 0.433521170121874355 ;
weighted_squared_targets_sum = 0.433521170121874355 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.491161130356071396 0 0.491161130356071396 ] ;
split_col = 1 ;
split_balance = 10 ;
split_feature_value = 0.502718698860307178 ;
after_split_error = 0.456009411249177987 ;
missing_node = *0 ;
missing_leave = *750 ->RegressionTreeLeave(
id = 2 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *751 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *752 ->RegressionTreeLeave(
id = 3 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 95 ;
weights_sum = 0.327685562949602771 ;
targets_sum = 11 ;
weighted_targets_sum = 0.204284811315166598 ;
weighted_squared_targets_sum = 0.204284811315166598 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.153860298493941283 0 0.153860298493941283 ] ;
split_col = 4 ;
split_balance = 81 ;
split_feature_value = 0.264644704110722606 ;
after_split_error = 0.124344699950523135 ;
missing_node = *0 ;
missing_leave = *753 ->RegressionTreeLeave(
id = 5 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *754 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *755 ->RegressionTreeLeave(
id = 6 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 88 ;
weights_sum = 0.231894852396504175 ;
targets_sum = 5 ;
weighted_targets_sum = 0.112937949520379388 ;
weighted_squared_targets_sum = 0.112937949520379388 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.11586931364179763 0 0.11586931364179763 ] ;
split_col = 2 ;
split_balance = 78 ;
split_feature_value = 0.941974890824293754 ;
after_split_error = 0.0862489807289095883 ;
missing_node = *0 ;
missing_leave = *756 ->RegressionTreeLeave(
id = 11 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *757 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *758 ->RegressionTreeLeave(
id = 12 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 83 ;
weights_sum = 0.144124552913856202 ;
targets_sum = 4 ;
weighted_targets_sum = 0.0986153382941301337 ;
weighted_squared_targets_sum = 0.0986153382941301337 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.0622781684937041558 0 0.0622781684937041558 ] ;
split_col = 4 ;
split_balance = 75 ;
split_feature_value = 1.46268193282061976e-05 ;
after_split_error = 0.0317752728200500489 ;
missing_node = *0 ;
missing_leave = *759 ->RegressionTreeLeave(
id = 17 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *760 ->RegressionTreeLeave(
id = 18 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.000122687633122823522 ;
targets_sum = 0 ;
weighted_targets_sum = 3.46944695195361419e-18 ;
weighted_squared_targets_sum = 3.46944695195361419e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *761 ->RegressionTreeLeave(
id = 19 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 82 ;
weights_sum = 0.144001865280733138 ;
targets_sum = 4 ;
weighted_targets_sum = 0.0986153382941301337 ;
weighted_squared_targets_sum = 0.0986153382941301337 ;
loss_function_factor = 2  )
 )
;
left_leave = *758  ;
right_node = *762 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *763 ->RegressionTreeLeave(
id = 13 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 5 ;
weights_sum = 0.0877702994826478622 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0143226112262492579 ;
weighted_squared_targets_sum = 0.0143226112262492579 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.0239708122352054361 0 0.0239708122352054361 ] ;
split_col = 3 ;
split_balance = 3 ;
split_feature_value = 0.987251230798804613 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *764 ->RegressionTreeLeave(
id = 20 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *765 ->RegressionTreeLeave(
id = 21 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0124925465023531211 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *766 ->RegressionTreeLeave(
id = 22 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 4 ;
weights_sum = 0.0752777529802947376 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0143226112262492579 ;
weighted_squared_targets_sum = 0.0143226112262492579 ;
loss_function_factor = 2  )
 )
;
right_leave = *763   )
;
left_leave = *755  ;
right_node = *767 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *768 ->RegressionTreeLeave(
id = 7 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 7 ;
weights_sum = 0.0957907105530985958 ;
targets_sum = 6 ;
weighted_targets_sum = 0.0913468617947872097 ;
weighted_squared_targets_sum = 0.0913468617947872097 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 1 1 ] ;
leave_error = 3 [ 0.00847538630872543552 0 0.00847538630872543552 ] ;
split_col = 3 ;
split_balance = 5 ;
split_feature_value = 0.306301132450967406 ;
after_split_error = 0 ;
missing_node = *0 ;
missing_leave = *769 ->RegressionTreeLeave(
id = 14 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *770 ->RegressionTreeLeave(
id = 15 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0353792403406492165 ;
targets_sum = 1 ;
weighted_targets_sum = 0.0353792403406492303 ;
weighted_squared_targets_sum = 0.0353792403406492303 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *771 ->RegressionTreeLeave(
id = 16 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 6 ;
weights_sum = 0.0604114702124493724 ;
targets_sum = 5 ;
weighted_targets_sum = 0.0559676214541379724 ;
weighted_squared_targets_sum = 0.0559676214541379724 ;
loss_function_factor = 2  )
 )
;
right_leave = *768   )
;
left_leave = *752  ;
right_node = *772 ->RegressionTreeNode(
missing_is_valid = 0 ;
leave = *773 ->RegressionTreeLeave(
id = 4 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 105 ;
weights_sum = 0.672314437050399616 ;
targets_sum = 81 ;
weighted_targets_sum = 0.229236358806707563 ;
weighted_squared_targets_sum = 0.229236358806707563 ;
loss_function_factor = 2  )
;
leave_output = 2 [ 0 1 ] ;
leave_error = 3 [ 0.302149112755236982 0 0.302149112755236982 ] ;
split_col = 1 ;
split_balance = 89 ;
split_feature_value = 0.531511881898726335 ;
after_split_error = 0.278035902305286187 ;
missing_node = *0 ;
missing_leave = *774 ->RegressionTreeLeave(
id = 8 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 2  )
;
left_node = *0 ;
left_leave = *775 ->RegressionTreeLeave(
id = 9 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 1 ;
weights_sum = 0.0105931536290697573 ;
targets_sum = 0 ;
weighted_targets_sum = 5.20417042793042128e-18 ;
weighted_squared_targets_sum = 5.20417042793042128e-18 ;
loss_function_factor = 2  )
;
right_node = *0 ;
right_leave = *776 ->RegressionTreeLeave(
id = 10 ;
missing_leave = 0 ;
loss_function_weight = 1 ;
verbosity = 2 ;
length = 104 ;
weights_sum = 0.661721283421328188 ;
targets_sum = 81 ;
weighted_targets_sum = 0.22923635880670773 ;
weighted_squared_targets_sum = 0.22923635880670773 ;
loss_function_factor = 2  )
 )
;
right_leave = *773   )
;
priority_queue = *777 ->RegressionTreeQueue(
verbosity = 2 ;
maximum_number_of_nodes = 4 ;
next_available_node = 4 ;
nodes = 4 [ *757  *762  *772  *767  ]  )
;
first_leave = *749  ;
split_cols = 3 [ 1 4 2 ] ;
split_values = 3 [ 0.502718698860307178 0.264644704110722606 0.941974890824293754 ] ;
random_gen = *0 ;
seed = 1827 ;
stage = 4 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
] ;
voting_weights = 12 [ 1.12702902604969268 1.03548207574539641 0.627174476979685869 0.750250393230790458 0.243196868623840629 0.487910101857012224 0.434343534989996505 0.369680722849932031 0.516138335783265179 0.287214970759119059 0.384464196250010937 0.439193765713115358 ] ;
sum_voting_weights = 6.70207846883185709 ;
initial_sum_weights = 200 ;
example_weights = 200 [ 0.000208999323974944171 0.00055454680971253373 0.000280504045088514136 0.00055454680971253373 0.000208999323974944171 0.00970647716624035983 0.00055454680971253373 0.000339924914881385677 0.0110653149853990503 0.00778205130351132708 0.000208999323974944171 0.024398678070881339 0.0323001053964686105 0.00055454680971253373 0.000339924914881385677 0.000117671997982472966 0.000208999323974944171 0.00055454680971253373 0.0490383661954016739 0.000437769476772936251 0.000117671997982472966 0.0205716909579260823 0.000117671997982472966 0.000117671997982472966 0.000117671997982472966 0.00055454680971253373 0.0076104231728418353 0.0171298405614496337 0.000208999323974944171 0.000208999323974944171 0.000117671997982472966 0.016300265773906121 0.00119640871801693599 0.000208999323974944171 0.000208999323974944171 0.000117671997982472966 0.0105321055927624831 0.0105321055927624831 0.000208999323974944171 0.000208999323974944171 0.00055454680971253373 0.000208999323974944171 0.00259525858356851125 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.00623231395217586567 0.000117671997982472966 0.000208999323974944171 0.0323001053964686105 0.000208999323974944171 0.00055454680971253373 0.0017777693464267458 0.000117671997982472966 0.00055454680971253373 0.00910668071110512685 0.000280504045088514136 0.000117671997982472966 0.000208999323974944171 0.000208999323974944171 0.00422103304611871639 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.0319239733177390586 0.0323001053964686105 0.000437769476772936251 0.000208999323974944171 0.000208999323974944171 0.0143798490176562967 0.000208999323974944171 0.026377266187366858 0.000339924914881385677 0.000208999323974944171 0.000208999323974944171 0.000117671997982472966 0.00205966483174763919 0.00749705170508035805 0.0110250694567599825 0.00132191707442976783 0.000339924914881385677 0.0250388131247752874 0.0180455184510893603 0.000280504045088514136 0.000117671997982472966 0.00970647716624035983 0.000208999323974944171 0.000208999323974944171 0.000280504045088514136 0.000208999323974944171 0.000208999323974944171 0.000117671997982472966 0.000208999323974944171 0.00884130168746423764 0.000208999323974944171 0.00055454680971253373 0.000117671997982472966 0.0143798490176562967 0.00055454680971253373 0.000208999323974944171 0.00119640871801693599 0.00153462513281898624 0.000280504045088514136 0.000280504045088514136 0.0017777693464267458 0.019621017607701189 0.000117671997982472966 0.000117671997982472966 0.000208999323974944171 0.000280504045088514136 0.000208999323974944171 0.000437769476772936251 0.000117671997982472966 0.0323001053964686105 0.000117671997982472966 0.000117671997982472966 0.00119162560508736365 0.026377266187366858 0.00422103304611871639 0.000117671997982472966 0.00055454680971253373 0.000117671997982472966 0.000339924914881385677 0.000280504045088514136 0.0387900741831750592 0.00119162560508736365 0.0330808940330893156 0.00910668071110512685 0.00205966483174763919 0.00027985234944076417 0.016300265773906121 0.00055454680971253373 0.000280504045088514136 0.000208999323974944171 0.000280504045088514136 0.0143798490176562967 0.000117671997982472966 0.0171298405614496337 0.0279351648715520373 0.000208999323974944171 0.000280504045088514136 0.000208999323974944171 0.000280504045088514136 0.0227297487201944676 0.000208999323974944171 0.00055454680971253373 0.000117671997982472966 0.000208999323974944171 0.000339924914881385677 0.000208999323974944171 0.0265375112954981986 0.000117671997982472966 0.000208999323974944171 0.000117671997982472966 0.0205716909579260823 0.00778205130351132708 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.000339924914881385677 0.0126482917697524257 0.000280504045088514136 0.000208999323974944171 0.000117671997982472966 0.000497050724460643459 0.00422103304611871639 0.000208999323974944171 0.0036582072611220668 0.000954322272458555136 0.000208999323974944171 0.00205966483174763919 0.000901937257518955929 0.000208999323974944171 0.0211476558591618367 0.000208999323974944171 0.000901937257518955929 0.000117671997982472966 0.000339924914881385677 0.00749705170508035805 0.00970647716624035983 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.000208999323974944171 0.00749705170508035805 0.0323001053964686105 0.000208999323974944171 0.000117671997982472966 0.00205966483174763919 0.000208999323974944171 0.000280504045088514136 0.0206965325387320695 0.00749705170508035805 0.000280504045088514136 0.00757013044178810914 0.000437769476772936251 0.000208999323974944171 0.0227297487201944676 0.000208999323974944171 ] ;
learners_error = 12 [ 0.095000000000000015 0.111951148589706381 0.221948222046453703 0.182350845160595049 0.380743478208193542 0.273721933428698827 0.2955275688484712 0.323143793784225974 0.262642962029557558 0.36021526859897407 0.316710962060604451 0.293512033410994522 ] ;
weak_learner_template = *778 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 3 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *779 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 0 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 1  )
;
root = *0 ;
priority_queue = *0 ;
first_leave = *0 ;
split_cols = []
;
split_values = []
;
random_gen = *0 ;
seed = 1827 ;
stage = 0 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
target_error = 0.5 ;
pseudo_loss_adaboost = 1 ;
conf_rated_adaboost = 0 ;
weight_by_resampling = 0 ;
output_threshold = 0.5 ;
provide_learner_expdir = 1 ;
early_stopping = 0 ;
save_often = 0 ;
compute_training_error = 0 ;
forward_sub_learner_test_costs = 1 ;
modif_train_set_weights = 1 ;
found_zero_error_weak_learner = 0 ;
random_gen = *0 ;
seed = 1827 ;
stage = 12 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 1 ;
forget_when_training_set_changes = 0 ;
nstages = 12 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
forward_sub_learner_test_costs = 1 ;
learner_template = *780 ->AdaBoost(
weak_learners = []
;
voting_weights = []
;
sum_voting_weights = 0 ;
initial_sum_weights = 0 ;
example_weights = []
;
learners_error = []
;
weak_learner_template = *781 ->RegressionTree(
missing_is_valid = 0 ;
loss_function_weight = 1 ;
maximum_number_of_nodes = 3 ;
compute_train_stats = 0 ;
complexity_penalty_factor = 0 ;
output_confidence_target = 0 ;
multiclass_outputs = 3 [ 0 1 2 ] ;
leave_template = *782 ->RegressionTreeLeave(
id = -1 ;
missing_leave = 0 ;
loss_function_weight = 0 ;
verbosity = 2 ;
length = 0 ;
weights_sum = 0 ;
targets_sum = 0 ;
weighted_targets_sum = 0 ;
weighted_squared_targets_sum = 0 ;
loss_function_factor = 1  )
;
root = *0 ;
priority_queue = *0 ;
first_leave = *0 ;
split_cols = []
;
split_values = []
;
random_gen = *0 ;
seed = 1827 ;
stage = 0 ;
n_examples = -1 ;
inputsize = -1 ;
targetsize = -1 ;
weightsize = -1 ;
forget_when_training_set_changes = 1 ;
nstages = 4 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
;
target_error = 0.5 ;
pseudo_loss_adaboost = 1 ;
conf_rated_adaboost = 0 ;
weight_by_resampling = 0 ;
output_threshold = 0.5 ;
provide_learner_expdir = 1 ;
early_stopping = 0 ;
save_often = 0 ;
compute_training_error = 0 ;
forward_sub_learner_test_costs = 1 ;
modif_train_set_weights = 0 ;
found_zero_error_weak_learner = 0 ;
random_gen = *0 ;
seed = 1827 ;
stage = 0 ;
n_examples = -1 ;
inputsize = -1 ;
targetsize = -1 ;
weightsize = -1 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 2 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
 )
;
perf_evaluators = {};
report_stats = 1 ;
save_initial_tester = 0 ;
save_stat_collectors = 1 ;
save_split_stats = 1 ;
save_learners = 0 ;
save_initial_learners = 0 ;
save_data_sets = 0 ;
save_test_outputs = 0 ;
call_forget_in_run = 1 ;
save_test_costs = 0 ;
save_test_names = 0 ;
provide_learner_expdir = 1 ;
should_train = 1 ;
should_test = 1 ;
template_stats_collector = *0 ;
global_template_stats_collector = *0 ;
final_commands = []
;
save_test_confidence = 0 ;
enforce_clean_expdir = 1 ;
redirect_stdout = 0 ;
redirect_stderr = 0  )
;
option_fields = 1 [ "nstages" ] ;
dont_restart_upon_change = 1 [ "nstages" ] ;
strategy = 1 [ *783 ->HyperOptimize(
which_cost = "E[test2.E[class_error]]" ;
min_n_trials = 0 ;
oracle = *784 ->EarlyStoppingOracle(
option = "nstages" ;
values = []
;
range = 3 [ 1 21 1 ] ;
min_value = -3.40282000000000014e+38 ;
max_value = 3.40282000000000014e+38 ;
max_degradation = 3.40282000000000014e+38 ;
relative_max_degradation = -1 ;
min_improvement = -3.40282000000000014e+38 ;
relative_min_improvement = -1 ;
max_degraded_steps = 120 ;
min_n_steps = 2 ;
nreturned = 20 ;
best_objective = 0 ;
best_step = 12 ;
met_early_stopping = 0  )
;
provide_tester_expdir = 0 ;
sub_strategy = []
;
rerun_after_sub = 0 ;
provide_sub_expdir = 1 ;
save_best_learner = 0 ;
splitter = *0 ;
auto_save = 0 ;
auto_save_diff_time = 10800 ;
auto_save_test = 0 ;
best_objective = 0 ;
best_results = 8 [ 0.00666666666666666709 0.00666666666666666709 0.00666666666666666709 0 0 0 0 0 ] ;
best_learner = *5  ;
trialnum = 20 ;
option_vals = []
;
verbosity = 0  )
] ;
provide_strategy_expdir = 1 ;
save_final_learner = 0 ;
learner = *5  ;
provide_learner_expdir = 1 ;
expdir_append = "" ;
forward_nstages = 0 ;
random_gen = *0 ;
stage = 1 ;
n_examples = 200 ;
inputsize = 5 ;
targetsize = 1 ;
weightsize = 0 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = "" ;
test_minibatch_size = 1 ;
use_a_separate_random_generator_for_testing = 1827  )
