PTester(
expdir = "PYTEST__PL_constant_regressor_script__RESULTS:expdir/" ;
dataset = *1 ->AutoVMatrix(
filename = "PLEARNDIR:examples/data/test_suite/gauss_1D_100pt.amat" ;
load_in_memory = 0 ;
writable = 0 ;
length = 100 ;
width = 1 ;
inputsize = 0 ;
targetsize = 1 ;
weightsize = 0 ;
extrasize = 0 ;
metadatadir = "PLEARNDIR:examples/data/test_suite/gauss_1D_100pt.amat.metadata/"  )
;
splitter = *2 ->FractionSplitter(
round_to_closest = 0 ;
splits = 1  2  [ 
(0 , 1 )	(0 , 1 )	
]
 )
;
statnames = 32 [ "E[train.E[mse]]" "E[test.E[mse]]" "E[test.V[mse]]" "E[test.STDDEV[mse]]" "E[test.STDERROR[mse]]" "E[test.SKEW[mse]]" "E[test.KURT[mse]]" "E[test.MIN[mse]]" "E[test.MAX[mse]]" "E[test.RANGE[mse]]" "E[test.SUM[mse]]" "E[test.SUMSQ[mse]]" "E[test.FIRST[mse]]" "E[test.LAST[mse]]" "E[test.N[mse]]" "E[test.NMISSING[mse]]" "E[test.NNONMISSING[mse]]" "E[test.SHARPERATIO[mse]]" "E[test.ZSTAT[mse]]" "E[test.PZ1t[mse]]" "E[test.PZ2t[mse]]" "E[test.PSEUDOQ(0.001)[mse]]" "E[test.PSEUDOQ(0.01)[mse]]" "E[test.PSEUDOQ(0.05)[mse]]" "E[test.PSEUDOQ(0.25)[mse]]" "E[test.PSEUDOQ(0.5)[mse]]" "E[test.PSEUDOQ(0.75)[mse]]" "E[test.PSEUDOQ(0.95)[mse]]" "E[test.PSEUDOQ(0.99)[mse]]" "E[test.PSEUDOQ(0.999)[mse]]" "E[test.IQR[mse]]" "E[test.PRR[mse]]" ] ;
statmask = TVec(0 0 *0 )
;
learner = *3 ->ConstantRegressor(
weight_decay = 0 ;
constant_output = TVec(0 0 *0 )
;
expdir = "" ;
seed = -1 ;
stage = 0 ;
n_examples = -1 ;
inputsize = -1 ;
targetsize = -1 ;
weightsize = -1 ;
forget_when_training_set_changes = 0 ;
nstages = 1 ;
report_progress = 1 ;
verbosity = 1 ;
nservers = 0 ;
save_trainingset_prefix = ""  )
;
perf_evaluators = {};
report_stats = 1 ;
save_initial_tester = 1 ;
save_stat_collectors = 1 ;
save_learners = 1 ;
save_initial_learners = 0 ;
save_data_sets = 0 ;
save_test_outputs = 1 ;
call_forget_in_run = 1 ;
save_test_costs = 1 ;
provide_learner_expdir = 1 ;
train = 1 ;
template_stats_collector = *4 ->VecStatsCollector(
maxnvalues = 50 ;
fieldnames = TVec(0 0 *0 )
;
compute_covariance = 0 ;
epsilon = 0 ;
window = -1 ;
no_removal_warnings = 0 ;
stats = TVec(0 0 *0 )
;
cov = 0  0  [ 
]
;
sum_cross = 0  0  [ 
]
;
sum_cross_weights = 0  0  [ 
]
;
sum_cross_square_weights = 0  0  [ 
]
;
sum_non_missing_weights = 0 ;
sum_non_missing_square_weights = 0  )
;
global_template_stats_collector = *0 ;
final_commands = TVec(0 0 *0 )
;
save_test_confidence = 1  )
