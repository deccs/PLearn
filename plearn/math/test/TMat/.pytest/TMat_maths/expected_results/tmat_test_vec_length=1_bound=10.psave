*1 ->TMatTest(
vec_length = 1 ;
bound = 10 ;
real_options = {"argmax" : 0 , "argmin" : 0 , "harmonic_mean" : -3.60767960548400879 , "harmonic_mean (ignore_missing)" : -3.60767960548400879 , "logadd" : -3.60767960548400879 , "max" : -3.60767960548400879 , "mean" : -3.60767960548400879 , "mean (ignore missing)" : -3.60767960548400879 , "median" : -3.60767960548400879 , "min" : -3.60767960548400879 , "norm" : 3.60767960548400879 , "product" : -3.60767960548400879 , "sum" : -3.60767960548400879 , "sum (ignore missing)" : -3.60767960548400879 , "sum_of_log" : nan , "sumabs" : 3.60767960548400879 , "sumsquare" : 13.0153521358252533 };
vec_options = {"exp" : 1 [ 0.0271146907065204293 ] , "fasttanh" : 1 [ -0.998527824878692627 ] , "inverted" : 1 [ -0.277186477003087239 ] , "log" : 1 [ nan ] , "nonZeroIndices" : 1 [ 0 ] , "remove_missing" : 1 [ -3.60767960548400879 ] , "sign" : 1 [ -1 ] , "softmax" : 1 [ 1 ] , "sqrt" : 1 [ nan ] , "square" : 1 [ 13.0153521358252533 ] , "squareroot" : 1 [ nan ] , "tanh" : 1 [ -0.99853066735861773 ] , "vector" : 1 [ -3.60767960548400879 ] };
save = 1 ;
save_path = "tmat_test_vec_length=1_bound=10.psave"  )
