# Conjugate gradient optimization with a neural network.

PTester(
    dataset = AutoVMatrix(
        specification = "PLEARNDIR:examples/data/test_suite/linear_4x_2y.amat"
        inputsize = 4
        targetsize = 2
        weightsize = 0
    )

    splitter = TrainTestSplitter(
        test_fraction = 0.25
        append_train = 1
    )

    statnames = [ "E[test1.E[mse]]" "E[test2.E[mse]]" ]

    learner =
        NNet( 
            nhidden = 100
            noutputs = 2
            cost_funcs = [ "mse" ]
            optimizer =
                ConjGradientOptimizer(verbosity = 1)
            batch_size = 0
            seed = 123456
            nstages = 25
            report_progress = 0
            verbosity = 0
        )
)


