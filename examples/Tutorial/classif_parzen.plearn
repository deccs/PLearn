ClassifierFromDensity( 
nclasses = 2;

# TVec< PP< PDistribution > >: The array of density estimators, one for each class. 
# You may also specify just one that will be replicated as many times as there are classes.
estimators = 
[
ParzenWindow( sigma_square = .3; outputs_def = "d")
ParzenWindow( sigma_square = .3; outputs_def = "d")
]

# TVec< double >: The log of the class prior probabilities
log_priors = []
 ;

# bool: Whether computeOutput yields log-probabilities or probabilities (of classes given inputs)
output_log_probabilities = 1 ;

# bool: Whether to normalize the probabilities (if not just compute likelihood * prior for each class)
normalize_probabilities = 0;

# PPath: Path of the directory associated with this learner, in which
# it should save any file it wishes to create. 
# The directory will be created if it does not already exist.
# If expdir is the empty string (the default), then the learner 
# should not create *any* file. Note that, anyway, most file creation and 
# reporting are handled at the level of the PTester class rather than 
# at the learner's. 
expdir = ""  ;

# long: The initial seed for the random number generator used to initialize this learner's parameters
# as typically done in the forget() method... 
# If -1 is provided, then a 'random' seed is chosen based on time of day, insuring that
# different experiments may yield different results.
# With a given seed, forget() should always initialize the parameters to the same values.
seed = -1  ;

# int: The stage until which train() should train this learner and return.
# The meaning of 'stage' is learner-dependent, but for learners whose 
# training is incremental (such as involving incremental optimization), 
# it is typically synonym with the number of 'epochs', i.e. the number 
# of passages of the optimization process through the whole training set, 
# since the last fresh initialisation.
nstages = 1  ;

# bool: should progress in learning and testing be reported in a ProgressBar.
report_progress = 1  ;

# int: Level of verbosity. If 0 should not write anything on cerr. 
# If >0 may write some info on the steps performed along the way.
# The level of details written should depend on this value.
verbosity = 1  ;

);

