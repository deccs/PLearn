#!/usr/bin/perl

# perlgrep
# A script that performs a search in source files 
# recursing through directories

# Copyright (C) 1999 Pascal Vincent
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#
#   3. The name of the authors may not be used to endorse or promote
#      products derived from this software without specific prior written
#      permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
#  NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#  This file is part of the PLearn library. For more information on the PLearn
#  library, go to the PLearn Web site at www.plearn.org

# returns a full path to the given file (which may be expressed relative to the current directory)
# if the file refers to a directory, an ending '/' will be appended to the name if it wasn't already there
sub fullpath($)
{
    $filepath = $_[0];
    if(substr($filepath,0,1) ne "/")
    { 
        $pwd = `pwd`;
        chomp($pwd);
        appendslash($pwd);
        $filepath = $pwd.$filepath; 
    }
    appendslash($filepath) if -d $filepath ;
    return $filepath;
}

# appends a slash at the end if there isn't already one
# argument is both modified and returned.
sub appendslash($)
{
    if(substr($_[0],length($_[0])-1,1) ne "/")
    { $_[0].="/"; }
    return $_[0];
}

# returns full path to all files and subdirectories of this dir
sub lsdir($)
{
#    my $dirname = fullpath($_[0]);
    my $dirname = appendslash($_[0]);
    opendir(DIR,$dirname) || die "couldn't open directory $dirname";
    @flist = grep(!/^\./,readdir(DIR));
    closedir(DIR);
    @flist =  map { $dirname.$_ } @flist;
    return @flist;
}


sub process_file($)
{
  my $fname = $_[0];
  # print "Examining file $fname\n";
  open(FILE,$fname) or die "couldn't open file $fname for reading";
  my $line = 1;
  while(<FILE>)
  {
      print "$fname:$line $_" if eval("m/$search/");
      $line++;
  }

  close(FILE);   
}

sub process_list(@)
{
    foreach $fname (@_)
    {
        if (-l $fname)
        { 
            print "Skipping symbolic link $fname\n";
        }
        else
        {
            # print "processing $fname\n";
            if (-d $fname)
            { 
                my @flist = lsdir($fname);
                
                @flist = grep { -d $_ or /Makefile|makefile|
                                    \.c$|\.cc$|\.cpp$|\.CC$|\.h$|\.hpp$
                                   |\.plearn$|\.pyplearn$|\.py$
                                   |\.txt$|^readme|^Readme|^README/x } @flist;
                process_list(@flist); 
            }
            else
            { 
                process_file($fname);
            }
        }
    }
}

################
# Main program #
################

$nargs = $#ARGV+1;
if($nargs<2)
{
print 
"
usage: pgrep regexp <list of files and directories>

Will perform the specified grep operation on every file in the
list and recursively in directories.  (only certain kinds of files are
considered when recursing in directories, .c .cc .h .txt Makefile makefile)

Ex: pgrep '\\bVMatrix\\b' .
";

exit;
}

$search = shift;
process_list(@ARGV);

