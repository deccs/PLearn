#!/usr/bin/env python
import os, string, sys

external = ['__builtin__', 'os', 'sys', 'string']
             
def pldoc_help():
    prog = os.path.basename( sys.argv[0] )
    print    
    print '\n'.join([ "%s will generate, in the current working directory, a directory"%prog,
                      "named 'html'. Use your favorite browser to view 'html/index.html'"
                      ])
    print
    sys.exit()

def process_tutorial( none, dirname, dirlist ):
    os.chdir( dirname )
    if 'tutorial.py' in dirlist:
        print 'Processing tutorial in %s' % dirname
        os.system( 'python tutorial.py' )
    
if __name__ == '__main__':
    if "--help" in sys.argv or '-h' in sys.argv:
        pldoc_help()

    from plearn.utilities.ppath   import ppath
    plearndir = ppath( 'PLEARNDIR' )


    #
    #  Processing Python modules
    #
    from plearn.utilities.moresh  import *
    pushd( os.getcwd() )    
    plpath = os.path.join( plearndir, 'python_modules/plearn' )    
    os.path.walk( plpath, process_tutorial, None )
    popd()

    from plearn.utilities.toolkit import vsystem
    vsystem( 'epydoc --html --output ./python_modules_html %s' % plpath )

    #
    #  Processing C++ files
    #
    pushd( os.path.join( plearndir, 'commands' ) )
    vsystem( 'pymake plearn_full' )
    popd( )

    autodoc_path = 'html_autodoc'
    cpp_doc_path = os.path.join( autodoc_path, 'doc' )
    if not os.path.exists( cpp_doc_path ):
        os.mkdir( cpp_doc_path )

    pushd( autodoc_path )
    vsystem( 'plearn_full htmlhelp html_config.plearn' )
    popd( )

    pushd( cpp_doc_path )
    vsystem( 'ln -s ../plearn.css' )
    vsystem( 'cp ../plearn.jpg .' )
    vsystem( 'cp ../background.png .' )
